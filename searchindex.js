Search.setIndex({"docnames": ["data-preparation", "developer-guide", "index", "installation", "kgx_biolink_validation", "kgx_format", "kgx_schema_generation", "mapping_to_rdfstar", "reference/cli/cli_utils", "reference/cli/index", "reference/cli/kgx_cli", "reference/curie_lookup_service", "reference/graph", "reference/graph_operations/clique_merge", "reference/graph_operations/fold_predicate", "reference/graph_operations/graph_merge", "reference/graph_operations/index", "reference/graph_operations/meta_knowledge_graph", "reference/graph_operations/remap_edge_property", "reference/graph_operations/remap_node_identifiers", "reference/graph_operations/remap_node_property", "reference/graph_operations/remove_singleton_nodes", "reference/graph_operations/summarize_graph", "reference/graph_operations/unfold_node_property", "reference/index", "reference/prefix_manager", "reference/sink", "reference/source", "reference/transformer", "reference/trapi_sink", "reference/trapi_source", "reference/utilities/graph_utils", "reference/utilities/index", "reference/utilities/kgx_utils", "reference/utilities/rdf_utils", "reference/validator", "transformation_and_validation_examples"], "filenames": ["data-preparation.md", "developer-guide.md", "index.rst", "installation.md", "kgx_biolink_validation.md", "kgx_format.md", "kgx_schema_generation.md", "mapping_to_rdfstar.md", "reference/cli/cli_utils.md", "reference/cli/index.md", "reference/cli/kgx_cli.md", "reference/curie_lookup_service.md", "reference/graph.md", "reference/graph_operations/clique_merge.md", "reference/graph_operations/fold_predicate.md", "reference/graph_operations/graph_merge.md", "reference/graph_operations/index.md", "reference/graph_operations/meta_knowledge_graph.md", "reference/graph_operations/remap_edge_property.md", "reference/graph_operations/remap_node_identifiers.md", "reference/graph_operations/remap_node_property.md", "reference/graph_operations/remove_singleton_nodes.md", "reference/graph_operations/summarize_graph.md", "reference/graph_operations/unfold_node_property.md", "reference/index.md", "reference/prefix_manager.md", "reference/sink.md", "reference/source.md", "reference/transformer.md", "reference/trapi_sink.md", "reference/trapi_source.md", "reference/utilities/graph_utils.md", "reference/utilities/index.md", "reference/utilities/kgx_utils.md", "reference/utilities/rdf_utils.md", "reference/validator.md", "transformation_and_validation_examples.md"], "titles": ["Data preparation for use with KGX", "KGX Developer Guide", "Welcome to the KGX documentation", "Installation", "KGX and Biolink Model JSON Schema Validation", "KGX Specification", "KGX Schema", "Mapping kgx to rdf-star", "CLI Utils", "KGX Command Line Interface", "KGX CLI", "CURIE Lookup Service", "Knowledge Graphs in Memory", "Clique Merge", "Fold Predicate", "Graph Merge", "Graph Operations", "Meta Knowledge Graph", "Remap Edge Property", "Remap Node Identifier", "Remap Node Property", "Remove Singleton Nodes", "Summarize Graph", "Unfold Node Property", "Reference", "Prefix Manager", "Sink", "Source", "Transformer", "TRAPI Sink", "TRAPI Source", "Graph Utils", "Utilities", "KGX Utils", "RDF Utils", "KGX Validator", "KGX transformation and validation examples"], "terms": {"support": [0, 1, 2, 4, 5, 6, 8, 11, 12, 16, 26, 27, 28, 35, 36], "variou": [0, 1, 4, 5, 28], "format": [0, 2, 4, 6, 8, 10, 17, 22, 28, 35, 36], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 21, 22, 26, 27, 28, 33, 34, 35, 36], "certain": [0, 1, 7, 27], "assumpt": [0, 7, 27], "made": [0, 1, 13], "while": [0, 4, 5, 6, 13, 15, 27], "work": [0, 1, 5, 31], "These": [0, 1, 7, 25, 27], "especi": 0, "true": [0, 1, 5, 6, 8, 12, 13, 15, 17, 22, 25, 26, 27, 28, 31, 33, 35], "tsv": [0, 1, 2, 4, 7, 8, 10, 26, 27, 28, 35, 36], "csv": [0, 2, 10, 26, 27], "json": [0, 1, 2, 7, 8, 10, 17, 22, 25, 28, 29, 30, 35, 36], "thing": [0, 6], "like": [0, 1, 15, 26], "how": [0, 5, 36], "inform": [0, 1, 5, 7, 26, 27, 28, 35], "about": [0, 5, 17, 22, 35], "node": [0, 1, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 22, 31, 33, 36], "repres": [0, 1, 5, 6, 12, 13, 26, 27], "edg": [0, 1, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 21, 22, 23, 33, 36], "pleas": [0, 5], "refer": [0, 1, 2, 5, 17, 18, 19, 20, 22, 25, 26, 27, 34], "specif": [0, 1, 2, 3, 4, 7, 8, 10, 11, 13, 17, 22, 28], "more": [0, 1, 2, 4, 5, 6, 7, 13, 15, 27, 28, 31, 35, 36], "thi": [1, 5, 7, 8, 12, 13, 15, 16, 17, 21, 22, 24, 26, 27, 28, 29, 31, 33, 36], "can": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 33, 35, 36], "consid": 1, "keen": 1, "contribut": 1, "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "current": [1, 4, 17, 22, 26, 27, 28, 33, 36], "1": [1, 5, 7, 8, 17, 22, 27, 28, 29, 35, 36], "x": [1, 5, 22, 23], "major": 1, "rewrit": [1, 4, 8, 10, 36], "from": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36], "0": [1, 17, 21, 27, 28, 29, 35], "main": [1, 13, 17, 19, 22], "motiv": 1, "wa": [1, 5], "reduc": [1, 15, 27], "complex": [1, 17, 22], "increas": [1, 15, 26], "flexibl": [1, 5, 26], "improv": [1, 2, 35], "readabl": [1, 5, 26, 27], "add": [1, 4, 5, 6, 12, 13, 15, 22, 26, 27, 28], "abil": [1, 11], "stream": [1, 4, 5, 8, 10, 26, 27, 28], "rest": 1, "assum": [1, 7, 28], "canon": [1, 8], "follow": [1, 3, 4, 5, 6, 13, 15, 26, 27, 28, 35, 36], "keep": 1, "mind": 1, "when": [1, 4, 5, 6, 7, 11, 15, 25, 26, 27, 28, 29, 33], "codebas": [1, 33], "whether": [1, 8, 10, 12, 13, 14, 15, 25, 26, 27, 28, 31, 33], "modifi": [1, 6, 12, 15, 17, 19, 22], "exist": [1, 5, 12, 33, 35, 36], "implement": [1, 2, 5, 12, 26, 27], "write": [1, 8, 10, 17, 22, 26, 28, 29, 36], "new": [1, 2, 4, 5, 12, 15, 18, 19, 20, 25, 28, 33], "ones": 1, "A": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36], "ani": [1, 4, 6, 7, 8, 10, 12, 13, 17, 21, 22, 26, 27, 28, 33, 34, 36], "file": [1, 2, 4, 6, 7, 8, 10, 17, 22, 28, 29, 30, 33], "local": [1, 3, 7, 8, 10, 26, 27, 36], "remot": [1, 8, 10, 26, 27, 36], "store": [1, 2, 4, 12, 26, 27, 28], "contain": [1, 3, 5, 6, 8, 10, 12, 13, 26, 27, 28, 29, 30, 31, 33, 34], "respons": [1, 26, 27, 28, 29, 30], "read": [1, 4, 28, 30], "must": [1, 4, 7, 10, 26, 27, 28, 35], "subclass": [1, 4, 12, 26, 27], "class": [1, 4, 5, 6, 11, 12, 13, 17, 22, 24, 25, 26, 27, 28, 33, 35, 36], "return": [1, 8, 12, 13, 15, 17, 19, 22, 25, 26, 27, 28, 31, 33, 34], "gener": [1, 2, 4, 5, 7, 8, 10, 12, 13, 17, 22, 26, 27, 28, 33, 36], "iter": [1, 12, 27], "over": [1, 12, 27], "list": [1, 5, 8, 10, 12, 13, 15, 17, 19, 22, 26, 27, 28, 31, 33, 34, 35], "record": [1, 4, 17, 22, 28, 29, 30], "each": [1, 4, 5, 7, 8, 12, 13, 16, 17, 25, 26, 27, 29, 30], "2": [1, 3, 5, 7, 17, 27, 28], "tupl": [1, 8, 10, 12, 13, 26, 27, 28, 34], "node_id": [1, 12, 27], "node_data": [1, 12, 27], "where": [1, 5, 7, 8, 10, 11, 12, 13, 14, 15, 23, 26, 27, 28, 33, 34], "curi": [1, 2, 4, 5, 8, 10, 17, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35], "dictionari": [1, 8, 12, 17, 22, 25, 26, 27, 28, 29, 33], "properti": [1, 2, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 28, 29, 30, 33, 35], "4": [1, 3, 5, 12, 27, 30], "subject_id": [1, 27], "object_id": [1, 27], "edge_kei": [1, 12, 27], "edge_data": [1, 12, 27], "subject": [1, 4, 5, 6, 7, 12, 13, 15, 17, 22, 23, 26, 27, 29, 30, 33, 35], "object": [1, 4, 5, 6, 7, 11, 12, 13, 15, 17, 22, 23, 25, 26, 27, 29, 30, 33, 35], "uniqu": [1, 5, 7, 26, 27, 33], "kei": [1, 5, 6, 8, 12, 15, 17, 22, 26, 27, 29, 33], "which": [1, 5, 7, 8, 10, 12, 13, 17, 18, 19, 20, 22, 26, 27, 28], "written": [1, 8, 10, 26, 28], "us": [1, 2, 5, 6, 7, 8, 10, 12, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34], "instanti": [1, 26, 33], "configur": [1, 8, 26, 33, 36], "requir": [1, 3, 6, 10, 11, 15, 17, 22, 28, 35], "In": [1, 5, 13, 25, 26, 27, 28], "case": [1, 6, 17, 22, 26, 27, 28, 33], "take": [1, 13, 15, 16, 17, 19, 22, 26, 27], "filenam": [1, 5, 17, 22, 26, 27, 28, 29, 30], "argument": [1, 8, 10, 17, 19, 22, 26, 27, 28], "neo4j": [1, 2, 3, 8, 26, 27], "uri": [1, 7, 8, 10, 25, 26, 27, 33, 35, 36], "usernam": [1, 8, 10, 26, 27, 36], "password": [1, 8, 10, 26, 27, 36], "also": [1, 5, 7, 26, 27, 36], "ha": [1, 3, 5, 7, 12, 13, 15, 16, 21, 23, 26, 27], "an": [1, 2, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 33, 34, 36], "option": [1, 3, 7, 8, 10, 11, 12, 13, 17, 22, 23, 25, 28, 29, 30, 31, 33, 34], "kwarg": [1, 12, 17, 22, 26, 27, 28], "suppli": [1, 26], "variabl": [1, 5, 12, 26, 27], "number": [1, 3, 8, 10, 12, 13, 15, 17, 22, 26, 27], "depend": [1, 3, 15, 26], "being": [1, 8, 10, 17, 22, 26], "receiv": [1, 26], "need": [1, 6, 13, 17, 18, 19, 20, 22, 26, 27, 36], "perform": [1, 5, 13, 16, 26, 35, 36], "after": [1, 26, 28], "all": [1, 3, 4, 5, 6, 8, 11, 12, 13, 15, 17, 21, 24, 26, 27, 28, 31, 32, 33, 35], "defin": [1, 4, 5, 6, 8, 10, 11, 12, 13, 15, 26, 27, 28, 33, 35, 36], "For": [1, 2, 5, 7, 8, 10, 13, 17, 22, 26, 27, 29, 30, 35, 36], "exampl": [1, 2, 7, 8, 10, 13, 22, 28], "tsv_sourc": [1, 26], "tsvsourc": [1, 26, 27], "close": [1, 26, 33], "handl": [1, 3, 26, 27, 30, 34], "creat": [1, 2, 3, 5, 6, 12, 13, 15, 26, 27, 30, 33, 35], "archiv": [1, 5, 17, 26], "compress": [1, 8, 10, 26, 27, 29, 30], "desir": [1, 15, 17, 26, 28], "neo_sink": 1, "neosink": [1, 26], "cach": [1, 26, 27, 33], "data": [1, 2, 5, 6, 10, 12, 15, 26, 27, 29, 30, 33, 35], "instanc": [1, 8, 10, 13, 14, 15, 16, 17, 19, 22, 23, 26, 27, 28, 33, 34, 36], "execut": 1, "intermedi": [1, 5, 6, 28], "base_graph": [1, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 31, 33], "basegraph": [1, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 31, 33], "import": [1, 5, 6, 28, 29, 30, 33, 35, 36], "input_arg": [1, 28], "graph_nod": [1, 28, 36], "graph_edg": [1, 28, 36], "t": [1, 4, 5, 6, 27, 28], "And": 1, "save": [1, 17, 22, 26, 28], "output_arg": [1, 28], "comput": [1, 5, 17, 22, 26, 27], "some": [1, 5, 7, 28, 36], "e": [1, 5, 6, 8, 10, 21, 26, 27, 28], "g": [1, 4, 5, 6, 8, 15, 26, 27, 28], "summari": [1, 8, 17, 22], "custom": [1, 25, 27], "inspector": [1, 17, 22, 28], "see": [1, 4, 5, 28, 29, 30], "below": [1, 5, 28, 36], "input": [1, 4, 8, 10, 13, 16, 17, 26, 27, 28, 31, 33, 35, 36], "throw": 1, "awai": 1, "null": [1, 10, 28, 33], "kgx_util": 1, "graphentitytyp": [1, 17, 22, 28, 33], "testinspector": 1, "def": 1, "self": [1, 25, 26, 27], "_node_count": 1, "_edge_count": 1, "__call__": 1, "entity_typ": 1, "rec": 1, "elif": 1, "els": [1, 30], "rais": [1, 17], "runtimeerror": [1, 17], "unexpect": 1, "str": [1, 8, 10, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34], "get_node_count": 1, "get_edge_count": 1, "print": 1, "across": [1, 17, 33, 35], "place": 1, "unless": 1, "those": [1, 8, 10, 17, 22], "bound": 1, "reli": [1, 3, 31], "state": 1, "do": [1, 28, 33], "travers": [1, 12, 31, 34], "graph_util": 1, "rdf": [1, 2, 4, 8, 11, 26, 27, 32], "function": [1, 7, 9, 16, 17, 22, 27, 36], "rdf_util": [1, 27], "small": 1, "collect": 1, "appli": [1, 4, 6, 7, 8, 26, 27, 28, 33], "everi": [1, 4, 14, 17, 23, 27], "its": [1, 12, 13, 17, 31], "own": 1, "separ": [1, 5, 6, 7, 11, 26, 27, 28, 29, 30], "submodul": [1, 24], "graph_oper": 1, "first": [1, 3, 13, 15, 17, 22, 28, 29, 30, 31], "other": [1, 2, 5, 6, 7, 8, 15, 28], "document": [1, 4, 5, 6, 24, 28, 29, 30], "check": [1, 4, 8, 10, 12, 13, 25, 26, 27, 33, 34, 35], "given": [1, 11, 12, 13, 17, 22, 25, 26, 27, 28, 31, 33, 34], "biolink": [1, 2, 3, 5, 6, 7, 8, 10, 13, 17, 22, 25, 26, 27, 28, 29, 30, 33, 34, 36], "model": [1, 2, 5, 6, 8, 10, 13, 25, 26, 27, 28, 29, 33, 34, 36], "compliant": [1, 2, 4, 5, 17, 27, 36], "valdiat": 1, "command": [1, 2, 3, 4, 8, 10, 17, 22, 24, 36], "line": [1, 2, 8, 24, 29, 30, 36], "interfac": [1, 2, 6, 24], "built": [1, 13], "click": 1, "librari": [1, 2, 12, 26, 27], "entrypoint": [1, 10, 16], "As": [1, 7, 17, 22], "choic": 1, "should": [1, 5, 7, 12, 17, 22, 26, 27, 28, 33, 35], "cli_util": 1, "expos": [1, 26, 27], "wrapper": [1, 12], "section": [1, 8, 24], "detail": [1, 2, 4, 5, 24, 29, 30], "throughout": [1, 32], "period": 1, "done": [1, 4, 5, 15, 26, 36], "black": 1, "python": [1, 3, 6, 27], "skip": [1, 3, 27], "string": [1, 4, 5, 8, 10, 17, 18, 19, 20, 22, 25, 26, 27, 28, 33, 35, 36], "normal": [1, 28], "length": 1, "100": 1, "test": [1, 28, 36], "make": [1, 3, 5, 6, 7, 12, 25, 26, 27, 31, 33, 35], "panda": [1, 4, 26, 27, 33], "style": [1, 17], "sphinx": 1, "autogener": [1, 15], "typecheck": 1, "mypi": 1, "strict": [1, 13], "ignor": [1, 17, 22], "miss": [1, 35], "repositori": [1, 3], "run": [1, 3, 6, 8, 10], "commit": 1, "pr": 1, "master": 1, "branch": 1, "via": [1, 7, 13, 28, 31], "github": [1, 2, 4, 7], "action": 1, "sonarcloud": 1, "provid": [1, 4, 5, 6, 7, 12, 13, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36], "wide": [1, 4, 12], "rang": [1, 5, 6], "metric": 1, "help": [1, 28, 35], "determin": [1, 5, 25, 26, 31, 33, 35], "maintain": [1, 4], "scan": 1, "repo": 1, "ensur": [1, 5, 6, 13, 15, 26, 27, 29, 33, 35], "qualiti": [1, 35], "abov": [1, 28], "satisfi": 1, "limit": [1, 27], "entir": [1, 2, 4, 17, 22], "sake": 1, "better": [1, 5, 26, 35], "practic": [1, 2, 6], "wai": [1, 4, 5, 6, 9, 26, 27, 36], "interfer": 1, "merg": [1, 6, 8, 16], "If": [1, 3, 4, 7, 13, 15, 28, 31, 33], "you": [1, 2, 3, 12, 13, 15, 28, 35, 36], "core": [1, 2, 5, 7, 15], "have": [1, 5, 7, 8, 12, 13, 15, 17, 21, 22, 33, 35], "admin": [1, 36], "access": [1, 9, 26, 27, 28, 35, 36], "project": [1, 28], "semant": [1, 4, 5, 6], "version": [1, 3, 8, 10, 17, 22, 29], "There": [1, 5, 7, 26, 36], "two": [1, 5, 7, 15, 26, 27, 28, 29, 30, 33, 36], "latest": [1, 8, 10], "chang": [1, 4, 28], "off": 1, "legaci": 1, "onli": [1, 5, 11, 13, 15, 17, 22, 26, 27, 28], "bug": 1, "address": [1, 2, 8, 10], "No": [1, 4, 28], "featur": [1, 28], "ad": [1, 6, 26], "To": [1, 3, 6, 12, 17, 22, 27, 28], "instruct": 1, "push": 1, "pypi": 1, "dockerhub": 1, "sever": [1, 6], "driver": 1, "It": [1, 5, 7, 11, 35], "origin": [1, 5, 13], "start": [1, 27], "out": [1, 28], "ncat": 1, "biomed": 1, "translat": [1, 2, 17, 22, 27, 29, 30], "sinc": [1, 17, 22, 27], "found": [1, 17, 25, 31, 33, 36], "applic": [1, 6, 8, 17, 22, 35], "monarch": [1, 28], "initi": [1, 5, 11, 25, 28, 29, 30], "kg": [1, 2, 4, 5, 8, 10, 26], "covid": 1, "19": 1, "microb": 1, "knowledg": [1, 2, 4, 5, 6, 8, 10, 16, 22, 24, 26, 27, 29, 35, 36], "hub": [1, 17, 22], "ontoml": 1, "neat": 1, "runner": 1, "i": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36], "util": [2, 4, 9, 19, 24], "set": [2, 8, 10, 12, 13, 16, 17, 22, 25, 26, 27, 28, 31, 33, 35], "tool": [2, 4, 7, 17, 22, 35], "exchang": [2, 5, 6, 10, 17], "graph": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 32, 33, 34], "here": [2, 5, 7, 10, 17, 22, 26, 27, 36], "partli": 2, "intend": [2, 5], "primarili": 2, "build": [2, 6, 13], "thu": [2, 5], "expect": [2, 27, 35, 36], "http": [2, 3, 4, 5, 6, 7, 8, 10, 26, 27, 29, 36], "io": [2, 4, 7], "allow": [2, 4, 5, 6, 26, 27, 28], "fetch": [2, 12, 27], "sub": [2, 36], "one": [2, 4, 5, 7, 8, 10, 13, 15, 17, 22, 26, 27, 28, 31, 33, 36], "pg": 2, "default": [2, 5, 7, 8, 10, 14, 17, 22, 25, 26, 27, 28, 29, 30, 33, 36], "represent": [2, 5, 26, 27], "networkx": [2, 12, 13], "multidigraph": [2, 12, 13], "tripl": [2, 7, 17, 26, 27], "along": [2, 5, 19], "serial": [2, 4, 7, 8, 10, 17, 22, 26, 36], "obograph": [2, 27], "sssom": [2, 10, 27], "nt": [2, 10, 26, 27], "owl": [2, 10, 27], "instal": [2, 4], "user": [2, 5, 8, 10], "develop": 2, "quick": [2, 17, 22], "note": [2, 3, 7, 13, 17, 22, 27, 28, 36], "valid": [2, 6, 8, 13, 17, 22, 24, 27, 33], "introduct": 2, "schema": [2, 5, 26, 33], "tl": 2, "dr": 2, "skeptic": 2, "understand": [2, 6], "why": 2, "relationship": [2, 5, 6, 26, 27], "common": 2, "concern": 2, "resourc": [2, 5, 25, 28, 36], "workflow": [2, 21], "conclus": [2, 5], "overview": 2, "technic": 2, "transform": [2, 4, 5, 8, 14, 17, 22, 23, 24, 26, 35], "futur": 2, "sourc": [2, 3, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 33, 34, 35, 36], "sink": [2, 8, 24, 28], "oper": [2, 5, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 33, 36], "prefix": [2, 5, 13, 14, 17, 19, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35], "manag": [2, 3, 24, 34], "lookup": [2, 24, 26, 31], "servic": [2, 24], "memori": [2, 4, 15, 17, 22, 24, 26, 27, 28, 35], "modul": [2, 16, 17, 22, 28, 32], "cli": [2, 4, 9, 17], "guid": 2, "architectur": 2, "design": [2, 5, 6, 17, 22], "principl": 2, "convent": [2, 7], "continu": 2, "integr": [2, 3, 28], "releas": [2, 8, 10, 17, 22, 35], "roadmap": 2, "prepar": [2, 8, 27], "index": [2, 8, 17, 22, 26, 28], "search": [2, 13, 27], "page": [2, 27], "kgx": [3, 16, 24, 29, 32], "3": [3, 5, 27, 29, 35], "9": 3, "greater": 3, "avail": [3, 5, 6, 8, 26, 27, 28, 34], "pip": 3, "particular": 3, "specifi": [3, 7, 8, 10, 17, 22, 28, 31, 33, 35], "clone": 3, "git": 3, "com": [3, 4], "cd": 3, "pipx": 3, "ensurepath": 3, "next": 3, "activ": [3, 29], "shell": 3, "altern": [3, 5, 26, 27, 36], "python3": 3, "m": [3, 25, 26, 27], "venv": 3, "env": 3, "bin": 3, "suit": 3, "docker": 3, "your": [3, 13, 25, 28, 35, 36], "machin": [3, 21], "onc": [3, 13], "d": [3, 4, 8, 10], "name": [3, 4, 5, 6, 7, 8, 10, 14, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 33], "p": [3, 10, 14, 17, 23, 26, 27, 33, 34], "7474": [3, 8, 10, 26, 27, 36], "7687": 3, "neo4j_auth": 3, "5": [3, 17, 22, 27], "25": 3, "unit": [3, 28], "8484": 3, "8888": 3, "them": [3, 8, 10, 15, 21, 28, 35], "makefil": 3, "alreadi": [3, 17, 22, 33], "through": [3, 5, 6, 12, 13, 17, 22, 27], "simpli": [4, 5, 6, 17, 22, 31], "conform": [4, 5, 6], "That": 4, "": [4, 5, 6, 7, 9, 10, 13, 14, 15, 17, 19, 25, 27, 31, 33, 36], "noth": 4, "less": 4, "per": [4, 5, 7, 8, 10, 26, 27], "doesn": 4, "invent": 4, "namedth": [4, 5, 6, 13, 26, 27], "associ": [4, 5, 6, 26, 27, 28], "standard": [4, 6, 7, 17, 22, 27, 28, 35], "arrai": [4, 5, 26, 27], "One": [4, 28], "friendli": [4, 17, 22], "tabular": 4, "pipe": [4, 5, 26, 27], "delimit": [4, 5, 26, 27, 28, 33], "multi": [4, 5, 27], "field": [4, 5, 7, 13, 17, 19, 22, 26, 27, 28, 33], "web": 4, "w3id": [4, 5, 6], "org": [4, 5, 6, 27, 29], "descend": [4, 13, 17], "definit": 4, "jsonl": [4, 5, 10, 26, 27, 29, 30], "id": [4, 5, 6, 7, 13, 15, 17, 19, 22, 26, 27, 29, 30, 33], "hgnc": [4, 5, 26, 27], "11603": [4, 5, 26, 27], "tbx4": [4, 5, 26, 27], "categori": [4, 5, 6, 7, 13, 17, 19, 20, 22, 26, 27, 29, 30, 31, 33, 34, 35], "gene": [4, 5, 13, 26, 27, 35, 36], "in_taxon": [4, 5], "ncbitaxon": [4, 5], "9606": [4, 5], "predic": [4, 5, 6, 7, 8, 15, 16, 17, 23, 26, 27, 29, 30, 33, 34, 35], "contributes_to": [4, 5, 26, 27], "mondo": [4, 5, 26, 27, 29, 30, 35], "0005002": [4, 5, 26, 27, 29, 30], "knowledge_level": [4, 5, 26, 27], "observ": [4, 5, 26, 27], "manual_ag": [4, 5], "inherit": [4, 6], "symbol": [4, 5], "xref": [4, 5, 6, 26, 27], "etc": [4, 5], "base": [4, 5, 11, 12, 13, 17, 22, 25, 26, 27, 28, 31, 33, 35], "public": [4, 5, 26, 27], "primary_knowledge_sourc": [4, 5, 26, 27, 29, 30], "yourself": 4, "cat": 4, "head": 4, "ajv": 4, "newlin": 4, "complet": [4, 5, 6, 17, 22, 26, 27, 28, 36], "advantag": [4, 5, 6, 26, 27], "process": [4, 5, 8, 10, 26, 27, 28, 30, 33, 34], "time": [4, 17, 22, 25, 28, 33], "effici": [4, 5, 26, 27], "larg": [4, 5, 17, 22, 26, 27, 28], "parallel": 4, "split": [4, 7, 33], "chunk": [4, 27], "independ": [4, 7], "append": [4, 7, 33], "without": [4, 5, 6, 26, 27, 28, 33], "debug": 4, "inspect": [4, 17, 22], "individu": [4, 8, 13, 29, 30], "easili": [4, 5], "spark": 4, "still": [4, 5, 28], "we": [4, 5], "multipl": [4, 5, 17, 35], "draft": 4, "07": 4, "type": [4, 5, 6, 7, 8, 10, 12, 13, 15, 17, 19, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "descript": [4, 5, 6, 26, 27, 29, 30], "identifi": [4, 5, 7, 12, 13, 15, 16, 17, 22, 26, 27, 31, 33, 35], "item": [4, 33], "allof": 4, "ref": 4, "enum": [4, 33], "knowledge_assert": [4, 5], "logical_entail": [4, 5], "automated_ag": [4, 5], "appropri": [4, 31], "diseas": [4, 5, 25, 26, 27], "chemicalent": [4, 5, 26, 27], "toolkit": [4, 5, 8, 10, 33, 35], "between": [4, 5, 6, 7, 13, 35], "complianc": [4, 8, 10, 35, 36], "exactli": 4, "intention": 4, "lenient": [4, 5], "non": [4, 5, 8, 13, 28], "evolut": 4, "real": 4, "world": 4, "fix": [4, 7], "now": [4, 17, 22, 27, 28], "correctli": [4, 26], "reflect": 4, "agenttypeenum": [4, 5], "knowledgelevelenum": [4, 5], "updat": [4, 6, 12, 13, 25, 26, 27, 33, 36], "three": [4, 13], "linkml": [4, 5, 6], "yaml": [4, 7, 8, 10, 17, 22, 36], "kgx_format": 4, "md": 4, "kgx_schema_gener": 4, "in_taxon_label": [4, 5], "homo": [4, 5], "sapien": [4, 5], "chronic": [4, 5, 26, 27], "obstruct": [4, 5, 26, 27], "pulmonari": [4, 5, 26, 27], "uuid": [4, 5, 15, 26, 27, 33], "123": [4, 29], "infor": [4, 5, 8, 10, 26, 27, 29, 30, 36], "pmid": [4, 5, 26, 27], "12345678": [4, 5, 26, 27], "output": [4, 8, 10, 17, 22, 28, 35, 36], "anoth": [4, 5, 8, 10, 18, 20, 26, 27, 28, 36], "npm": 4, "echo": [4, 6], "addit": [4, 5, 7, 12, 17, 22, 26, 27, 28, 36], "overhead": [4, 17, 22], "bottom": 4, "isn": 4, "outlin": 5, "organ": 5, "signific": 5, "includ": [5, 6, 12, 17, 22, 25, 32, 33, 36], "both": [5, 6, 33], "varieti": [5, 12, 36], "offici": 5, "directli": [5, 9, 36], "against": [5, 13, 28, 35], "explan": 5, "notabl": 5, "decis": 5, "influenc": 5, "behavior": 5, "flat": [5, 27], "subset": [5, 27], "describ": [5, 6, 17, 22, 28], "prefer": [5, 13], "howev": [5, 7], "effort": 5, "inclus": 5, "evolv": 5, "break": 5, "level": [5, 6, 8, 17, 22, 26, 27, 28, 35], "multivalu": [5, 6, 7, 33], "valu": [5, 7, 8, 10, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 35], "hierarchi": [5, 6, 13, 26, 27, 31], "human": [5, 26, 27], "entiti": [5, 8, 17, 22, 26, 27, 28], "provided_bi": [5, 8, 10, 17, 22, 26, 27, 28, 29, 30], "assembl": 5, "databas": [5, 8, 10, 26, 27, 33, 36], "cross": [5, 26, 27], "ensembl": 5, "ensg00000123456": 5, "synonym": [5, 26, 27], "iri": [5, 8, 25, 26, 27, 33, 34], "form": [5, 8, 10, 26, 27, 28, 33, 34, 35], "same_a": [5, 13], "equival": [5, 13], "url": [5, 25, 33], "full": [5, 6, 8, 10], "extern": 5, "suffici": 5, "domain": 5, "protein": [5, 29, 30], "taxonom": 5, "classif": 5, "taxon": 5, "referenc": 5, "typic": [5, 7, 21], "themselv": 5, "won": 5, "violat": [5, 35], "intent": [5, 17, 22], "related_to": [5, 26, 27], "target": [5, 12, 13, 15, 26, 27], "accord": [5, 13, 26, 27], "agent_typ": [5, 26, 27], "autonom": [5, 26, 27], "agent": [5, 26, 27, 29], "proven": [5, 27], "most": [5, 13, 27, 31], "upstream": 5, "aggregator_knowledge_sourc": [5, 8, 10, 26, 27, 28, 29, 36], "pass": [5, 13, 27, 30, 33], "api": [5, 12, 17, 22, 27, 29, 30], "indic": [5, 19], "statement": [5, 26, 27], "purport": 5, "fact": 5, "assess": 5, "direct": [5, 27, 31], "evid": 5, "logic": 5, "establish": [5, 35], "predict": 5, "possibl": 5, "probabilist": 5, "reason": [5, 17, 27, 29, 30], "statistical_associ": 5, "report": [5, 8, 10, 17, 22, 35, 36], "concept": [5, 26, 27], "statist": [5, 22], "dataset": 5, "possibli": 5, "quantifi": 5, "phenomenon": [5, 29, 30], "occur": 5, "not_provid": 5, "cannot": 5, "driven": [5, 10, 36], "fulli": 5, "autom": [5, 6], "data_analysis_pipelin": 5, "pipelin": 5, "computational_model": 5, "text_mining_ag": 5, "text": [5, 17, 22], "mine": 5, "nlp": 5, "image_processing_ag": 5, "imag": 5, "analysi": 5, "manual_validation_of_automated_ag": 5, "result": [5, 28], "deprec": [5, 13, 17, 22, 26, 27, 28], "relat": [5, 6, 17, 26, 27, 29, 31, 33], "slot": [5, 6, 17, 33, 35], "backward": 5, "compat": [5, 6, 17, 22], "instead": 5, "high": [5, 6], "ontolog": 5, "ontologi": [5, 11, 26, 27, 31, 36], "v": [5, 15, 17, 22, 26], "distinct": [5, 17, 22, 28], "critic": 5, "proper": [5, 27, 29, 33, 35], "track": [5, 13, 17, 22], "framework": 5, "try": 5, "assign": [5, 17, 22, 30], "veri": [5, 17, 22, 35], "lightweight": [5, 17, 22], "adjust": 5, "is_a": [5, 6, 13, 17], "overlai": 5, "conveni": [5, 27], "knowledgegraph": [5, 6, 29], "superclass": [5, 6, 31], "inlin": [5, 6], "urn": [5, 26, 27], "5b06e86f": [5, 26, 27], "d768": [5, 26, 27], "4cd9": [5, 26, 27], "ac27": [5, 26, 27], "abe31e95ab1": [5, 26, 27], "genetodiseaseassoci": [5, 26, 27], "26634245": [5, 26, 27], "26634244": [5, 26, 27], "biologicalent": 5, "gwascatalog": 5, "diseaseorphenotypicfeatur": 5, "ro": [5, 26, 27, 29], "0003304": [5, 26, 27], "spars": 5, "special": 5, "column": 5, "order": [5, 13], "inconsist": 5, "simpl": [5, 7, 26, 27, 28], "singl": [5, 6, 7, 8, 10, 15, 26, 27, 28, 29, 30, 33], "either": [5, 7, 17, 22, 26, 27, 28], "combin": [5, 7, 26, 27], "nativ": [5, 26, 27], "nest": [5, 26], "capabl": [5, 12, 26], "orient": [5, 26, 27], "_node": [5, 26, 27], "_edg": [5, 26, 27], "assert": [5, 26, 27], "biochem": [5, 26, 27], "biolog": [5, 26, 27], "often": [5, 26, 27], "formal": [5, 26, 27], "knowledge_sourc": [5, 8, 10, 17, 22, 26, 27, 28, 29], "primari": [5, 26, 27], "aggreg": [5, 17, 26, 27, 28], "differ": [5, 26, 27, 35], "ensg00000121075": 5, "ncbigen": [5, 35], "9496": 5, "copd": 5, "airwai": 5, "doid": 5, "3083": 5, "uml": 5, "c0024117": 5, "clinic": 5, "trial": 5, "clinicaltri": 5, "nct01015638": 5, "studi": 5, "drug": 5, "treatment": 5, "y": [5, 22], "gov": 5, "ct2": 5, "show": [5, 10], "genet": 5, "basi": 5, "pubm": 5, "ncbi": 5, "nlm": 5, "nih": 5, "actual": [5, 7, 26, 27], "jsonlin": [5, 26, 27, 29, 30], "would": [5, 15, 26, 27], "comment": [5, 26, 27], "a8575c4": [5, 26, 27], "61a6": [5, 26, 27], "428a": [5, 26, 27], "bf09": [5, 26, 27], "fcb3e8d1644d": [5, 26, 27], "gwa": [5, 26, 27], "catalog": [5, 10, 26, 27, 28], "c7d632b4": [5, 26, 27], "6708": [5, 26, 27], "4296": [5, 26, 27], "9cfe": [5, 26, 27], "44bc586d32c8": [5, 26, 27], "chebi": [5, 26, 27], "15365": [5, 26, 27], "affect": [5, 26, 27], "go": [5, 13, 25, 27, 36], "0006915": [5, 27], "chemicaltoprocessassoci": [5, 27], "monarchin": [5, 26, 27], "acetaminophen": [5, 26, 27], "smallmolecul": [5, 26, 27], "offer": [5, 26], "than": [5, 7, 8, 26], "monolith": [5, 26], "obo": [5, 10, 27], "purl": 5, "obolibrari": [5, 27], "vocab": 5, "www": 5, "w3": 5, "1999": 5, "02": 5, "22": 5, "syntax": [5, 33], "n": [5, 10, 15, 17, 22, 23, 26, 27], "2000": 5, "01": 5, "xsd": [5, 8], "2001": 5, "xmlschema": 5, "mondo_0005002": 5, "201806": 5, "ro_0003304": 5, "label": [5, 7, 11, 12, 22, 26, 31, 33], "leverag": [6, 35], "rich": 6, "simplifi": 6, "extend": [6, 12, 27], "parent": [6, 13, 31], "summar": [6, 8, 10, 16, 17, 36], "becom": [6, 14, 23], "interact": [6, 12], "higher": 6, "remain": [6, 15, 26], "automat": 6, "stai": 6, "sync": 6, "packag": 6, "togeth": 6, "step": [6, 13], "materi": 6, "final": [6, 17, 22, 29], "produc": 6, "kgx_merg": 6, "kgx_complet": 6, "kgx_inherit": 6, "script": [6, 36], "generate_transform": 6, "py": [6, 25, 28, 33], "spec": [6, 7], "clean": [6, 36], "up": [6, 13, 17, 22, 27], "rm": 6, "f": [6, 10], "kgx_final": 6, "derived_kgx_schema": 6, "full_transform": 6, "poetri": 6, "gen": 6, "mergeimport": 6, "o": [6, 10, 14, 17, 22, 27, 33], "map": [6, 8, 10, 12, 13, 17, 22, 25, 26, 27, 28, 31, 33, 34, 36], "deriv": 6, "class_deriv": 6, "child": 6, "populated_from": 6, "overrid": [6, 17, 22, 27], "potenti": 6, "convers": 6, "convert": [6, 27, 29, 30, 33], "space": [6, 27, 28], "camelcas": [6, 33, 35], "snake_cas": [6, 33, 35], "comprehens": 6, "element": [6, 12, 13, 26, 27, 28, 33, 34, 35], "rule": [6, 7, 28], "w3c": 7, "cg": 7, "consist": [7, 13, 22, 27, 35], "zero": 7, "row": 7, "c1": 7, "cn": 7, "atom": 7, "escap": [7, 26], "backquot": 7, "columntoproperti": 7, "header": [7, 27, 29, 30], "mai": [7, 17, 22, 27, 28, 36], "arbitrari": 7, "part": 7, "chain": 7, "subproperti": 7, "vocabulari": 7, "ld": [7, 25, 35], "context": [7, 25, 27, 35], "far": 7, "goe": 7, "pairwis": 7, "baseuri": 7, "substitut": [7, 28], "onto": [7, 27, 28], "NOT": 7, "same": [7, 13, 15], "r": [7, 10], "c": [7, 10], "literalvalu": 7, "todo": 7, "emit": 7, "quot": 7, "literalornod": 7, "c2": 7, "method": [8, 12, 13, 15, 17, 19, 22, 24, 27, 28, 31, 32, 33, 34, 36], "apply_oper": 8, "dict": [8, 11, 12, 13, 15, 17, 22, 25, 26, 27, 28, 33, 34], "paramet": [8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 33, 34], "correspond": [8, 12, 13, 22, 25, 26, 27, 28, 31, 33, 34], "get_input_file_typ": 8, "get": [8, 12, 13, 17, 22, 25, 27, 28, 31, 33, 35], "get_output_file_typ": 8, "get_report_format_typ": 8, "graph_summari": [8, 17, 22], "input_format": [8, 10], "input_compress": [8, 10], "report_typ": [8, 10], "report_format": [8, 10], "none": [8, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 33, 34], "graph_nam": [8, 10, 22], "node_facet_properti": [8, 10, 17, 22], "edge_facet_properti": [8, 10, 17, 22], "error_log": [8, 10, 17, 22, 28, 36], "load": [8, 10, 11, 27, 31, 35], "stdout": [8, 10], "meta": [8, 10, 16, 22, 27, 33, 36], "count": [8, 10, 17, 22, 27], "tag": [8, 17, 22, 28], "facet": [8, 10, 17, 22, 35], "original_knowledge_sourc": [8, 10], "error": [8, 10, 17, 22, 28, 36], "messag": [8, 10, 17, 22, 28], "stderr": [8, 10, 17, 22, 28, 36], "stat": [8, 17, 22], "merge_config": [8, 10], "destin": [8, 10], "int": [8, 10, 12, 15, 17, 22, 27, 33], "config": [8, 10, 11, 12, 26, 36], "OR": [8, 10], "neo4j_download": 8, "output_format": [8, 10], "output_compress": [8, 10], "bool": [8, 10, 12, 13, 14, 15, 25, 26, 27, 28, 31, 33], "node_filt": [8, 10, 27, 33], "edge_filt": [8, 10, 27, 33], "download": 8, "localhost": [8, 10, 26, 27, 36], "authent": [8, 10], "pars": [8, 10, 17, 22, 27, 28, 30], "filter": [8, 10, 17, 22, 27, 28, 31, 33], "neotransform": 8, "neo4j_upload": 8, "upload": 8, "parse_sourc": 8, "output_directori": 8, "prefix_map": [8, 25, 33], "node_property_pred": 8, "predicate_map": [8, 34], "checkpoint": 8, "fals": [8, 12, 14, 15, 28], "locat": 8, "ought": [8, 26], "treat": [8, 27], "prepare_input_arg": 8, "prepare_output_arg": 8, "reverse_prefix_map": [8, 25], "reverse_predicate_map": 8, "property_typ": 8, "export": [8, 26, 33], "xml": 8, "relev": [8, 11, 27, 28, 36], "prepare_top_level_arg": 8, "top": [8, 12, 13], "transform_config": [8, 10], "infores_catalog": [8, 10, 28], "boolean": [8, 10, 28], "dump": [8, 10, 28], "yet": 8, "call": [8, 17, 22, 26, 28, 36], "mode": [8, 26, 28, 35, 36], "transform_sourc": 8, "preserve_graph": 8, "preserv": [8, 12, 13, 15, 33], "biolink_releas": [8, 10, 33], "path": [8, 10], "semver": [8, 10], "message_level": [8, 17, 22, 28], "error_typ": [8, 17, 22, 28], "arg": 10, "exit": 10, "get_error": [10, 17, 22, 28, 35], "empti": [10, 17, 28, 36], "obojson": 10, "trapi": [10, 17, 22, 27, 36], "duckdb": 10, "parquet": [10, 26], "l": 10, "log": [10, 17, 22, 28, 35, 36], "within": [10, 13, 22], "everyth": 10, "u": [10, 15, 17, 22, 26], "sql": 10, "typ": 10, "k": [10, 17, 22, 26, 27], "b": 10, "doe": [11, 17, 22, 28, 31, 36], "so": [11, 17, 22], "pre": [11, 15], "curielookupservic": [11, 31, 33], "term": [11, 17, 34], "purpos": 11, "yml": [11, 12], "curie_map": 11, "load_ontologi": [11, 31], "abstract": 12, "underli": [12, 26, 27], "want": [12, 17, 22], "graph_stor": 12, "long": 12, "successfulli": [12, 17, 22], "add_edg": [12, 27], "subject_nod": 12, "object_nod": 12, "add_edge_attribut": 12, "attr_kei": 12, "attr_valu": 12, "attribut": [12, 13, 18, 19, 20, 27, 29, 30], "add_nod": [12, 27], "add_node_attribut": [12, 27], "clear": [12, 17, 22, 27, 28], "remov": [12, 14, 16, 28, 33], "degre": [12, 21], "edges_it": 12, "get_edg": [12, 27], "static": [12, 17, 25, 26, 27], "get_edge_attribut": 12, "get_nod": [12, 27], "get_node_attribut": 12, "has_edg": 12, "has_nod": 12, "in_edg": 12, "incom": [12, 15, 26, 28], "nodes_it": 12, "number_of_edg": 12, "number_of_nod": 12, "out_edg": 12, "outgo": 12, "relabel_nod": 12, "relabel": 12, "seri": [12, 13], "old": [12, 18, 20], "remove_edg": 12, "remove_nod": 12, "set_edge_attribut": 12, "pair": [12, 27, 33], "set_node_attribut": 12, "update_edge_attribut": 12, "update_node_attribut": 12, "basic": [12, 36], "elect": 13, "leader": 13, "move": 13, "entri": [13, 15, 17, 19, 22, 28], "point": [13, 15, 17, 19, 22], "connect": [13, 28, 33], "belong": [13, 26], "criteria": [13, 15], "thei": [13, 15, 21], "annot": [13, 22, 27, 28], "clique_lead": 13, "priorit": [13, 33], "highest": 13, "prioriti": 13, "fallback": [13, 25, 33], "alphabet": 13, "sort": [13, 27], "last": 13, "consolid": 13, "_original_subject": 13, "_original_object": 13, "build_cliqu": 13, "target_graph": 13, "check_all_categori": 13, "invalid": [13, 35], "sort_categori": 13, "re": [13, 17, 22], "arrang": 13, "distanc": 13, "member": 13, "mixin": 13, "ancestor": [13, 31, 33], "check_categori": 13, "closur": 13, "category_map": 13, "leader_annot": 13, "prefix_prioritization_map": 13, "signifi": [13, 19], "give": 13, "conflict": [13, 15, 33], "consolidate_edg": 13, "clique_graph": 13, "original_subject_properti": 13, "original_object_properti": 13, "elect_lead": 13, "get_category_from_equival": 13, "get_clique_categori": 13, "nx": 13, "get_leader_by_annot": 13, "been": 13, "strategi": 13, "get_leader_by_prefix_prior": 13, "prefix_priority_list": 13, "get_leader_by_sort": 13, "select": 13, "union": [13, 26, 27, 33, 34], "orderedset": 13, "mean": 13, "update_node_categori": 13, "remove_prefix": 14, "outcom": 15, "merge_all_graph": 15, "largest": 15, "footprint": [15, 17, 22, 27, 28], "side": [15, 36], "effect": [15, 36], "dure": [15, 28, 36], "merge_graph": 15, "approach": 15, "accommod": 15, "newli": 15, "said": 15, "ident": 15, "concaten": 15, "replac": [15, 18, 20, 28], "add_all_edg": 15, "g1": 15, "g2": 15, "add_all_nod": 15, "pick": [15, 19], "caveat": 15, "alter": 15, "look": [15, 31], "overwritten": 15, "merge_edg": 15, "merge_nod": 15, "cliqu": 16, "remap": 16, "fold": 16, "unfold": 16, "singleton": 16, "content": [17, 25, 36], "metadata": [17, 22, 27, 29, 30, 36], "kge": 17, "generate_meta_knowledge_graph": 17, "detect": [17, 22, 36], "anomali": [17, 22], "reset": [17, 22], "dashboard": [17, 22], "flag": [17, 22, 27], "significantli": [17, 22], "minim": [17, 22, 35], "code": [17, 27], "explicitli": 17, "endpoint": 17, "analog": 17, "metaknowledgegraph": [17, 22], "progress_monitor": [17, 22], "callabl": [17, 22, 27, 28], "errordetect": [17, 22, 28], "inject": [17, 22, 28], "intercept": [17, 22], "insid": [17, 22], "second": [17, 22, 28], "itself": [17, 22, 28, 33], "strictli": [17, 22, 28], "meant": [17, 22, 28], "procedur": [17, 22, 28], "mutat": [17, 22, 28], "hook": [17, 22], "namesak": [17, 22], "passiv": [17, 22], "monitor": [17, 22], "could": [17, 22, 28], "talli": [17, 22], "suitabl": [17, 22], "back": [17, 22], "low": [17, 22, 27], "introduc": [17, 22], "category_curi": [17, 22], "mkg": 17, "intern": [17, 22, 27, 28], "compil": [17, 22], "analyse_node_categori": [17, 22], "analys": [17, 22], "classmethod": [17, 22], "get_category_curie_from_index": 17, "cid": [17, 22], "get_cid": [17, 22], "get_count": [17, 22], "get_count_by_sourc": 17, "get_id_prefix": [17, 22], "get_nam": [17, 22], "json_object": [17, 22], "analyse_edg": [17, 22], "param": [17, 22, 26, 33], "analyse_nod": [17, 22], "clear_error": [17, 22, 28], "get_categori": [17, 22, 27], "encount": [17, 22], "unknown": [17, 22], "get_edge_count_by_pred": 17, "predicate_curi": 17, "get_edge_count_by_sourc": 17, "subject_categori": [17, 27], "object_categori": [17, 27], "get_edge_mapping_count": 17, "get_edge_stat": 17, "insensit": [17, 22, 28], "warn": [17, 22, 28, 35], "raw": [17, 22, 28], "just": [17, 22, 28], "get_facet_count": [17, 22], "counts_by_sourc": 17, "get_graph_summari": [17, 22], "similar": [17, 22, 28], "summarize_graph": 17, "except": [17, 22, 28], "captur": [17, 22, 35], "perhap": [17, 22], "therefor": [17, 22], "structur": [17, 22, 29, 30], "renam": [17, 22], "present": [17, 22, 27, 35], "get_node_count_by_categori": 17, "get_node_stat": [17, 22], "get_number_of_categori": 17, "exclud": 17, "get_predicate_count": 17, "get_total_edge_counts_across_map": 17, "replic": 17, "under": [17, 25], "get_total_edges_count": 17, "total": [17, 26, 27], "get_total_node_counts_across_categori": 17, "get_total_nodes_count": 17, "due": 17, "log_error": [17, 22, 28], "errortyp": [17, 22, 28], "messagelevel": [17, 22, 28], "validationerror": [17, 22, 28], "file_format": [17, 22], "open": [17, 22], "devic": [17, 22], "handler": [17, 22], "composit": [17, 36], "summarize_graph_edg": [17, 22], "summarize_graph_nod": [17, 22], "write_report": [17, 22, 28], "outstream": [17, 22, 28], "textio": [17, 22, 28], "8": [17, 22], "mkg_default": 17, "jsonencod": [17, 22], "properli": [17, 22, 27, 35], "edge_pred": [18, 26, 33], "old_properti": [18, 20], "new_properti": [18, 20], "whose": [18, 19, 20], "pull": [18, 19, 20], "alternative_properti": 19, "particip": 21, "prune": 21, "isol": 21, "befor": [21, 27], "learn": 21, "generate_graph_stat": 22, "equal": [22, 28], "well": [22, 25], "classic": 22, "graphsummari": 22, "graphsunmmari": 22, "get_category_curie_by_index": 22, "get_count_by_id_prefix": 22, "id_prefix": 22, "add_node_stat": 22, "facet_properti": 22, "gs_default": 22, "node_properti": [23, 26], "prefixmanag": [25, 34], "act": 25, "central": 25, "expans": 25, "contract": [25, 33], "hood": 25, "prefixcommon": [25, 33], "overridden": 25, "update_prefix_map": 25, "0008150": 25, "shortform": 25, "curie_util": [25, 33], "expand": [25, 33], "get_prefix": 25, "get_refer": 25, "is_curi": 25, "is_iri": 25, "set_prefix_map": [25, 27], "popul": 25, "update_reverse_prefix_map": 25, "revers": [25, 26], "owner": [26, 27], "graphsink": 26, "set_reverse_prefix_map": [26, 27], "nx_graph": [26, 30], "nxgraph": [26, 30], "tsvsink": 26, "tar": [26, 27], "gz": [26, 27, 29, 30], "set_edge_properti": 26, "edge_properti": 26, "set_node_properti": 26, "jsonsink": 26, "jsonstream": 26, "wner": 26, "jsonlsink": 26, "agr": 26, "manual_assert": 26, "qualified_pred": 26, "caus": [26, 27], "object_aspect_qualifi": [26, 29], "express": [26, 28], "object_direction_qualifi": 26, "chemicalaffectsgeneassoci": 26, "ctd": 26, "create_constraint_queri": 26, "cypher": [26, 27], "constraint": 26, "queri": [26, 27], "create_constraint": 26, "generate_unwind_edge_queri": 26, "unwind": 26, "default_node_categori": 26, "quickli": 26, "generate_unwind_node_queri": 26, "speed": 26, "sure": 26, "sanitize_categori": 26, "sanit": [26, 33], "claus": 26, "charact": [26, 28, 33], "exce": 26, "cache_s": 26, "rdfsink": 26, "reify_all_edg": 26, "reifi": 26, "get_biolink_el": [26, 27, 33, 34], "process_pred": [26, 27, 34], "uriref": [26, 27, 34], "slot_uri": [26, 27, 34], "set_property_typ": 26, "set_reverse_predicate_map": 26, "rdflib": [26, 27, 34], "parquetsink": 26, "tabl": 26, "read_nod": 27, "read_edg": 27, "check_edge_filt": 27, "check_node_filt": 27, "clear_graph_metadata": 27, "graph_metadata": 27, "longer": 27, "peculiar": 27, "persist": [27, 28], "problem": 27, "downstream": [27, 35], "get_infores_catalog": [27, 28], "set_edge_filt": 27, "subgraph": 27, "set_edge_proven": 27, "set_node_filt": 27, "set_node_proven": 27, "set_provenance_map": 27, "validate_edg": 27, "validate_nod": 27, "graphsourc": 27, "yield": 27, "datafram": 27, "df": 27, "jsonsourc": 27, "ijson": 27, "jsonlsourc": 27, "ideal": 27, "0002434": 27, "unlik": 27, "trapisourc": [27, 30], "load_edg": 27, "edge_id": 27, "load_nod": 27, "read_edges_jsonl": 27, "read_nodes_jsonl": 27, "obographsourc": 27, "parse_meta": 27, "equivalent_nod": 27, "sssomsourc": 27, "share": 27, "parse_head": 27, "neosourc": 27, "is_direct": 27, "undirect": 27, "format_edge_filt": 27, "op": 27, "bind": 27, "cql": 27, "format_node_filt": 27, "get_pag": 27, "query_funct": 27, "end": 27, "page_s": 27, "50000": 27, "size": [27, 33], "func": 27, "usual": 27, "pagin": 27, "10000": [27, 33], "might": 27, "edge_record": [27, 29], "batch": 27, "rdfsourc": 27, "parser": 27, "ntriples_pars": 27, "customntriplespars": 27, "plugin": 27, "ntripl": 27, "w3cntriplespars": 27, "rel": 27, "recommend": [27, 35], "data_sort": 27, "subject_iri": 27, "object_iri": 27, "predicate_iri": 27, "account": 27, "property_map": 27, "dereifi": 27, "set_node_property_pred": 27, "set_predicate_map": 27, "update_edg": 27, "subject_curi": 27, "object_curi": 27, "update_nod": 27, "owlsourc": 27, "owlstar": 27, "axiom": 27, "robot": 27, "load_graph": 27, "rdfgraph": [27, 34], "walk": 27, "substrat": 28, "fly": 28, "accept": 28, "test_transform": 28, "usag": [28, 36], "coupl": 28, "huge": 28, "incur": 28, "insert": 28, "global": 28, "Such": 28, "lack": 28, "explicit": 28, "algorithm": 28, "heurist": 28, "infer": [28, 34], "my": [28, 29], "et": 28, "al": 28, "quit": 28, "verbos": 28, "concis": 28, "trigger": 28, "candid": 28, "reformat": 28, "lower": 28, "alphanumer": 28, "word": 28, "hyphen": 28, "suppress": 28, "regular": 28, "match": 28, "substr": 28, "delet": 28, "pattern": 28, "third": 28, "again": 28, "programmat": 28, "get_sink": 28, "get_sourc": 28, "prior": 28, "trapisink": 29, "trapi_sink": 29, "biolink_vers": 29, "node_record": 29, "write_nod": 29, "write_edg": 29, "attribute_type_id": [29, 30], "resource_rol": [29, 30], "pks_record_url": [29, 30], "source_record_url": [29, 30], "qualifi": [29, 30], "knowledge_graph": [29, 30], "curie1": [29, 30], "curie2": [29, 30], "edge1": [29, 30], "edge2": [29, 30], "subsequ": [29, 30], "haptoglobin": [29, 30], "value_type_id": [29, 30], "uniprotkb": [29, 30], "p00738": [29, 30], "gene_associated_with_condit": [29, 30], "0002326": 29, "resource_id": [29, 30], "semmeddb": [29, 30], "qualifier_type_id": 29, "qualifier_valu": 29, "trapi_sourc": 30, "len": 30, "curie_lookup": 31, "find": 31, "predefin": 31, "preload": 31, "get_ancestor": 31, "get_category_via_superclass": 31, "trace": 31, "subclass_of": 31, "get_par": 31, "reus": 33, "enumer": 33, "apply_edge_filt": 33, "apply_filt": 33, "apply_graph_oper": 33, "apply_node_filt": 33, "build_export_row": 33, "list_delimit": 33, "camelcase_to_sentencecas": 33, "sentenc": 33, "close_connect": 33, "conn": 33, "sqlite": 33, "create_connect": 33, "db_file": 33, "current_time_in_milli": 33, "millisecond": 33, "format_biolink_categori": 33, "generate_edge_identifi": 33, "generate_edge_kei": 33, "generate_uuid": 33, "get_biolink_ancestor": 33, "linkml_model": 33, "get_biolink_property_typ": 33, "get_cach": 33, "maxsiz": 33, "cachetool": 33, "max": 33, "get_curie_lookup_servic": 33, "curie_lookup_servic": 33, "get_prefix_prioritization_map": 33, "get_toolkit": 33, "bmt": [33, 35], "get_type_for_properti": 33, "is_nul": 33, "numpi": 33, "nan": 33, "na": 33, "nat": 33, "prepare_data_dict": 33, "d1": 33, "d2": 33, "intersect": 33, "known": 33, "remove_nul": 33, "sanitize_import": 33, "sentencecase_to_camelcas": 33, "sentencecase_to_snakecas": 33, "snakecase_to_sentencecas": 33, "prefix_manag": 34, "infer_categori": 34, "adher": 35, "aspect": 35, "verifi": 35, "doubl": 35, "malform": 35, "set_biolink_model": 35, "input_nod": 35, "input_edg": 35, "validation_error": 35, "categor": 35, "info": 35, "suggest": 35, "invalid_categori": 35, "1234": 35, "missing_node_properti": 35, "0005737": 35, "issu": 35, "earli": 35, "facilit": 35, "interoper": 35, "system": 35, "guidanc": 35, "By": 35, "achiev": 36, "folder": 36, "insight": 36, "obtain": 36, "examin": 36, "regard": 36, "graph_stat": 36, "err": 36, "content_metadata": 36, "test_nod": 36, "test_edg": 36, "neo_graph_download": 36, "lead": 36, "test_graph": 36, "sampl": 36}, "objects": {"kgx.cli": [[8, 0, 0, "-", "cli_utils"]], "kgx.cli.cli_utils": [[8, 1, 1, "", "apply_operations"], [8, 1, 1, "", "get_input_file_types"], [8, 1, 1, "", "get_output_file_types"], [8, 1, 1, "", "get_report_format_types"], [8, 1, 1, "", "graph_summary"], [8, 1, 1, "", "merge"], [8, 1, 1, "", "neo4j_download"], [8, 1, 1, "", "neo4j_upload"], [8, 1, 1, "", "parse_source"], [8, 1, 1, "", "prepare_input_args"], [8, 1, 1, "", "prepare_output_args"], [8, 1, 1, "", "prepare_top_level_args"], [8, 1, 1, "", "transform"], [8, 1, 1, "", "transform_source"], [8, 1, 1, "", "validate"]], "kgx": [[11, 0, 0, "-", "curie_lookup_service"], [25, 0, 0, "-", "prefix_manager"], [28, 0, 0, "-", "transformer"], [10, 4, 1, "cmdoption-kgx-version", "--version"]], "kgx.curie_lookup_service": [[11, 2, 1, "", "CurieLookupService"]], "kgx.curie_lookup_service.CurieLookupService": [[11, 3, 1, "", "load_ontologies"]], "kgx.graph": [[12, 0, 0, "-", "base_graph"], [12, 0, 0, "-", "nx_graph"]], "kgx.graph.base_graph": [[12, 2, 1, "", "BaseGraph"]], "kgx.graph.base_graph.BaseGraph": [[12, 3, 1, "", "add_edge"], [12, 3, 1, "", "add_edge_attribute"], [12, 3, 1, "", "add_node"], [12, 3, 1, "", "add_node_attribute"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "degree"], [12, 3, 1, "", "edges"], [12, 3, 1, "", "edges_iter"], [12, 3, 1, "", "get_edge"], [12, 3, 1, "", "get_edge_attributes"], [12, 3, 1, "", "get_node"], [12, 3, 1, "", "get_node_attributes"], [12, 3, 1, "", "has_edge"], [12, 3, 1, "", "has_node"], [12, 3, 1, "", "in_edges"], [12, 3, 1, "", "nodes"], [12, 3, 1, "", "nodes_iter"], [12, 3, 1, "", "number_of_edges"], [12, 3, 1, "", "number_of_nodes"], [12, 3, 1, "", "out_edges"], [12, 3, 1, "", "relabel_nodes"], [12, 3, 1, "", "remove_edge"], [12, 3, 1, "", "remove_node"], [12, 3, 1, "", "set_edge_attributes"], [12, 3, 1, "", "set_node_attributes"], [12, 3, 1, "", "update_edge_attribute"], [12, 3, 1, "", "update_node_attribute"]], "kgx.graph.nx_graph": [[12, 2, 1, "", "NxGraph"]], "kgx.graph.nx_graph.NxGraph": [[12, 3, 1, "", "add_edge"], [12, 3, 1, "", "add_edge_attribute"], [12, 3, 1, "", "add_node"], [12, 3, 1, "", "add_node_attribute"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "degree"], [12, 3, 1, "", "edges"], [12, 3, 1, "", "edges_iter"], [12, 3, 1, "", "get_edge"], [12, 3, 1, "", "get_edge_attributes"], [12, 3, 1, "", "get_node"], [12, 3, 1, "", "get_node_attributes"], [12, 3, 1, "", "has_edge"], [12, 3, 1, "", "has_node"], [12, 3, 1, "", "in_edges"], [12, 3, 1, "", "nodes"], [12, 3, 1, "", "nodes_iter"], [12, 3, 1, "", "number_of_edges"], [12, 3, 1, "", "number_of_nodes"], [12, 3, 1, "", "out_edges"], [12, 3, 1, "", "relabel_nodes"], [12, 3, 1, "", "remove_edge"], [12, 3, 1, "", "remove_node"], [12, 3, 1, "", "set_edge_attributes"], [12, 3, 1, "", "set_node_attributes"], [12, 3, 1, "", "update_edge_attribute"], [12, 3, 1, "", "update_node_attribute"]], "kgx.graph_operations": [[13, 0, 0, "-", "clique_merge"], [14, 1, 1, "", "fold_predicate"], [15, 0, 0, "-", "graph_merge"], [17, 0, 0, "-", "meta_knowledge_graph"], [18, 1, 1, "", "remap_edge_property"], [19, 1, 1, "", "remap_node_identifier"], [20, 1, 1, "", "remap_node_property"], [21, 1, 1, "", "remove_singleton_nodes"], [22, 0, 0, "-", "summarize_graph"], [23, 1, 1, "", "unfold_node_property"]], "kgx.graph_operations.clique_merge": [[13, 1, 1, "", "build_cliques"], [13, 1, 1, "", "check_all_categories"], [13, 1, 1, "", "check_categories"], [13, 1, 1, "", "clique_merge"], [13, 1, 1, "", "consolidate_edges"], [13, 1, 1, "", "elect_leader"], [13, 1, 1, "", "get_category_from_equivalence"], [13, 1, 1, "", "get_clique_category"], [13, 1, 1, "", "get_leader_by_annotation"], [13, 1, 1, "", "get_leader_by_prefix_priority"], [13, 1, 1, "", "get_leader_by_sort"], [13, 1, 1, "", "sort_categories"], [13, 1, 1, "", "update_node_categories"]], "kgx.graph_operations.graph_merge": [[15, 1, 1, "", "add_all_edges"], [15, 1, 1, "", "add_all_nodes"], [15, 1, 1, "", "merge_all_graphs"], [15, 1, 1, "", "merge_edge"], [15, 1, 1, "", "merge_graphs"], [15, 1, 1, "", "merge_node"]], "kgx.graph_operations.meta_knowledge_graph": [[17, 2, 1, "", "MetaKnowledgeGraph"], [17, 1, 1, "", "generate_meta_knowledge_graph"], [17, 1, 1, "", "mkg_default"], [17, 1, 1, "", "summarize_graph"]], "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph": [[17, 2, 1, "", "Category"], [17, 3, 1, "", "analyse_edge"], [17, 3, 1, "", "analyse_node"], [17, 3, 1, "", "clear_errors"], [17, 3, 1, "", "get_category"], [17, 3, 1, "", "get_edge_count_by_predicate"], [17, 3, 1, "", "get_edge_count_by_source"], [17, 3, 1, "", "get_edge_mapping_count"], [17, 3, 1, "", "get_edge_stats"], [17, 3, 1, "", "get_errors"], [17, 3, 1, "", "get_facet_counts"], [17, 3, 1, "", "get_graph_summary"], [17, 3, 1, "", "get_name"], [17, 3, 1, "", "get_node_count_by_category"], [17, 3, 1, "", "get_node_stats"], [17, 3, 1, "", "get_number_of_categories"], [17, 3, 1, "", "get_predicate_count"], [17, 3, 1, "", "get_total_edge_counts_across_mappings"], [17, 3, 1, "", "get_total_edges_count"], [17, 3, 1, "", "get_total_node_counts_across_categories"], [17, 3, 1, "", "get_total_nodes_count"], [17, 3, 1, "", "log_error"], [17, 3, 1, "", "save"], [17, 3, 1, "", "summarize_graph"], [17, 3, 1, "", "summarize_graph_edges"], [17, 3, 1, "", "summarize_graph_nodes"], [17, 3, 1, "", "write_report"]], "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category": [[17, 3, 1, "", "analyse_node_category"], [17, 3, 1, "", "get_category_curie_from_index"], [17, 3, 1, "", "get_cid"], [17, 3, 1, "", "get_count"], [17, 3, 1, "", "get_count_by_source"], [17, 3, 1, "", "get_id_prefixes"], [17, 3, 1, "", "get_name"], [17, 3, 1, "", "json_object"]], "kgx.graph_operations.summarize_graph": [[22, 2, 1, "", "GraphSummary"], [22, 1, 1, "", "generate_graph_stats"], [22, 1, 1, "", "gs_default"], [22, 1, 1, "", "summarize_graph"]], "kgx.graph_operations.summarize_graph.GraphSummary": [[22, 2, 1, "", "Category"], [22, 3, 1, "", "add_node_stat"], [22, 3, 1, "", "analyse_edge"], [22, 3, 1, "", "analyse_node"], [22, 3, 1, "", "clear_errors"], [22, 3, 1, "", "get_category"], [22, 3, 1, "", "get_errors"], [22, 3, 1, "", "get_facet_counts"], [22, 3, 1, "", "get_graph_summary"], [22, 3, 1, "", "get_name"], [22, 3, 1, "", "get_node_stats"], [22, 3, 1, "", "log_error"], [22, 3, 1, "", "save"], [22, 3, 1, "", "summarize_graph"], [22, 3, 1, "", "summarize_graph_edges"], [22, 3, 1, "", "summarize_graph_nodes"], [22, 3, 1, "", "write_report"]], "kgx.graph_operations.summarize_graph.GraphSummary.Category": [[22, 3, 1, "", "analyse_node_category"], [22, 3, 1, "", "get_category_curie_by_index"], [22, 3, 1, "", "get_cid"], [22, 3, 1, "", "get_count"], [22, 3, 1, "", "get_count_by_id_prefixes"], [22, 3, 1, "", "get_id_prefixes"], [22, 3, 1, "", "get_name"], [22, 3, 1, "", "json_object"]], "kgx.prefix_manager": [[25, 2, 1, "", "PrefixManager"]], "kgx.prefix_manager.PrefixManager": [[25, 3, 1, "", "contract"], [25, 3, 1, "", "expand"], [25, 3, 1, "", "get_prefix"], [25, 3, 1, "", "get_reference"], [25, 3, 1, "", "is_curie"], [25, 3, 1, "", "is_iri"], [25, 3, 1, "", "set_prefix_map"], [25, 3, 1, "", "update_prefix_map"], [25, 3, 1, "", "update_reverse_prefix_map"]], "kgx.sink": [[26, 0, 0, "-", "graph_sink"], [26, 0, 0, "-", "json_sink"], [26, 0, 0, "-", "jsonl_sink"], [26, 0, 0, "-", "neo_sink"], [26, 0, 0, "-", "parquet_sink"], [26, 0, 0, "-", "rdf_sink"], [26, 0, 0, "-", "sink"], [26, 0, 0, "-", "tsv_sink"]], "kgx.sink.graph_sink": [[26, 2, 1, "", "GraphSink"]], "kgx.sink.graph_sink.GraphSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.json_sink": [[26, 2, 1, "", "JsonSink"]], "kgx.sink.json_sink.JsonSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.jsonl_sink": [[26, 2, 1, "", "JsonlSink"]], "kgx.sink.jsonl_sink.JsonlSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.neo_sink": [[26, 2, 1, "", "NeoSink"]], "kgx.sink.neo_sink.NeoSink": [[26, 3, 1, "", "create_constraint_query"], [26, 3, 1, "", "create_constraints"], [26, 3, 1, "", "finalize"], [26, 3, 1, "", "generate_unwind_edge_query"], [26, 3, 1, "", "generate_unwind_node_query"], [26, 3, 1, "", "sanitize_category"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.parquet_sink": [[26, 2, 1, "", "ParquetSink"]], "kgx.sink.parquet_sink.ParquetSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.rdf_sink": [[26, 2, 1, "", "RdfSink"]], "kgx.sink.rdf_sink.RdfSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "get_biolink_element"], [26, 3, 1, "", "process_predicate"], [26, 3, 1, "", "reify"], [26, 3, 1, "", "set_property_types"], [26, 3, 1, "", "set_reverse_predicate_mapping"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "uriref"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.sink": [[26, 2, 1, "", "Sink"]], "kgx.sink.sink.Sink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.sink.tsv_sink": [[26, 2, 1, "", "TsvSink"]], "kgx.sink.tsv_sink.TsvSink": [[26, 3, 1, "", "finalize"], [26, 3, 1, "", "set_edge_properties"], [26, 3, 1, "", "set_node_properties"], [26, 3, 1, "", "set_reverse_prefix_map"], [26, 3, 1, "", "write_edge"], [26, 3, 1, "", "write_node"]], "kgx.source": [[27, 0, 0, "-", "graph_source"], [27, 0, 0, "-", "json_source"], [27, 0, 0, "-", "jsonl_source"], [27, 0, 0, "-", "neo_source"], [27, 0, 0, "-", "obograph_source"], [27, 0, 0, "-", "owl_source"], [27, 0, 0, "-", "rdf_source"], [27, 0, 0, "-", "source"], [27, 0, 0, "-", "sssom_source"], [27, 0, 0, "-", "trapi_source"], [27, 0, 0, "-", "tsv_source"]], "kgx.source.graph_source": [[27, 2, 1, "", "GraphSource"]], "kgx.source.graph_source.GraphSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.json_source": [[27, 2, 1, "", "JsonSource"]], "kgx.source.json_source.JsonSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "read_edge"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_node"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.jsonl_source": [[27, 2, 1, "", "JsonlSource"]], "kgx.source.jsonl_source.JsonlSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "read_edge"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_node"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.neo_source": [[27, 2, 1, "", "NeoSource"]], "kgx.source.neo_source.NeoSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "count"], [27, 3, 1, "", "format_edge_filter"], [27, 3, 1, "", "format_node_filter"], [27, 3, 1, "", "get_edges"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "get_nodes"], [27, 3, 1, "", "get_pages"], [27, 3, 1, "", "load_edge"], [27, 3, 1, "", "load_edges"], [27, 3, 1, "", "load_node"], [27, 3, 1, "", "load_nodes"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.obograph_source": [[27, 2, 1, "", "ObographSource"]], "kgx.source.obograph_source.ObographSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_category"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "parse_meta"], [27, 3, 1, "", "read_edge"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_node"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.owl_source": [[27, 2, 1, "", "OwlSource"]], "kgx.source.owl_source.OwlSource": [[27, 3, 1, "", "add_edge"], [27, 3, 1, "", "add_node"], [27, 3, 1, "", "add_node_attribute"], [27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "dereify"], [27, 3, 1, "", "get_biolink_element"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "load_graph"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "process_predicate"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_property_predicates"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_predicate_mapping"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "triple"], [27, 3, 1, "", "update_edge"], [27, 3, 1, "", "update_node"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.rdf_source": [[27, 2, 1, "", "RdfSource"]], "kgx.source.rdf_source.RdfSource": [[27, 3, 1, "", "add_edge"], [27, 3, 1, "", "add_node"], [27, 3, 1, "", "add_node_attribute"], [27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "dereify"], [27, 3, 1, "", "get_biolink_element"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "process_predicate"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_property_predicates"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_predicate_mapping"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "triple"], [27, 3, 1, "", "update_edge"], [27, 3, 1, "", "update_node"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.source": [[27, 2, 1, "", "Source"]], "kgx.source.source.Source": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.sssom_source": [[27, 2, 1, "", "SssomSource"]], "kgx.source.sssom_source.SssomSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "load_edge"], [27, 3, 1, "", "load_edges"], [27, 3, 1, "", "load_node"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "parse_header"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.trapi_source": [[27, 2, 1, "", "TrapiSource"]], "kgx.source.trapi_source.TrapiSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "load_edge"], [27, 3, 1, "", "load_node"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "read_edge"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_edges_jsonl"], [27, 3, 1, "", "read_node"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "read_nodes_jsonl"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.source.tsv_source": [[27, 2, 1, "", "TsvSource"]], "kgx.source.tsv_source.TsvSource": [[27, 3, 1, "", "check_edge_filter"], [27, 3, 1, "", "check_node_filter"], [27, 3, 1, "", "clear_graph_metadata"], [27, 3, 1, "", "get_infores_catalog"], [27, 3, 1, "", "parse"], [27, 3, 1, "", "read_edge"], [27, 3, 1, "", "read_edges"], [27, 3, 1, "", "read_node"], [27, 3, 1, "", "read_nodes"], [27, 3, 1, "", "set_edge_filter"], [27, 3, 1, "", "set_edge_filters"], [27, 3, 1, "", "set_edge_provenance"], [27, 3, 1, "", "set_node_filter"], [27, 3, 1, "", "set_node_filters"], [27, 3, 1, "", "set_node_provenance"], [27, 3, 1, "", "set_prefix_map"], [27, 3, 1, "", "set_provenance_map"], [27, 3, 1, "", "set_reverse_prefix_map"], [27, 3, 1, "", "validate_edge"], [27, 3, 1, "", "validate_node"]], "kgx.transformer": [[28, 2, 1, "", "Transformer"]], "kgx.transformer.Transformer": [[28, 3, 1, "", "clear_errors"], [28, 3, 1, "", "get_errors"], [28, 3, 1, "", "get_infores_catalog"], [28, 3, 1, "", "get_sink"], [28, 3, 1, "", "get_source"], [28, 3, 1, "", "log_error"], [28, 3, 1, "", "process"], [28, 3, 1, "", "save"], [28, 3, 1, "", "transform"], [28, 3, 1, "", "write_report"]], "kgx.utils": [[31, 0, 0, "-", "graph_utils"], [33, 0, 0, "-", "kgx_utils"], [34, 0, 0, "-", "rdf_utils"]], "kgx.utils.graph_utils": [[31, 1, 1, "", "curie_lookup"], [31, 1, 1, "", "get_ancestors"], [31, 1, 1, "", "get_category_via_superclass"], [31, 1, 1, "", "get_parents"]], "kgx.utils.kgx_utils": [[33, 2, 1, "", "GraphEntityType"], [33, 1, 1, "", "apply_edge_filters"], [33, 1, 1, "", "apply_filters"], [33, 1, 1, "", "apply_graph_operations"], [33, 1, 1, "", "apply_node_filters"], [33, 1, 1, "", "build_export_row"], [33, 1, 1, "", "camelcase_to_sentencecase"], [33, 1, 1, "", "close_connection"], [33, 1, 1, "", "contract"], [33, 1, 1, "", "create_connection"], [33, 1, 1, "", "current_time_in_millis"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "format_biolink_category"], [33, 1, 1, "", "generate_edge_identifiers"], [33, 1, 1, "", "generate_edge_key"], [33, 1, 1, "", "generate_uuid"], [33, 1, 1, "", "get_biolink_ancestors"], [33, 1, 1, "", "get_biolink_element"], [33, 1, 1, "", "get_biolink_property_types"], [33, 1, 1, "", "get_cache"], [33, 1, 1, "", "get_curie_lookup_service"], [33, 1, 1, "", "get_prefix_prioritization_map"], [33, 1, 1, "", "get_toolkit"], [33, 1, 1, "", "get_type_for_property"], [33, 1, 1, "", "is_null"], [33, 1, 1, "", "prepare_data_dict"], [33, 1, 1, "", "remove_null"], [33, 1, 1, "", "sanitize_import"], [33, 1, 1, "", "sentencecase_to_camelcase"], [33, 1, 1, "", "sentencecase_to_snakecase"], [33, 1, 1, "", "snakecase_to_sentencecase"]], "kgx.utils.rdf_utils": [[34, 1, 1, "", "get_biolink_element"], [34, 1, 1, "", "infer_category"], [34, 1, 1, "", "process_predicate"]], "kgx-graph-summary": [[10, 4, 1, "cmdoption-kgx-graph-summary-edge-facet-properties", "--edge-facet-properties"], [10, 4, 1, "cmdoption-kgx-graph-summary-l", "--error-log"], [10, 4, 1, "cmdoption-kgx-graph-summary-n", "--graph-name"], [10, 4, 1, "cmdoption-kgx-graph-summary-c", "--input-compression"], [10, 4, 1, "cmdoption-kgx-graph-summary-i", "--input-format"], [10, 4, 1, "cmdoption-kgx-graph-summary-node-facet-properties", "--node-facet-properties"], [10, 4, 1, "cmdoption-kgx-graph-summary-o", "--output"], [10, 4, 1, "cmdoption-kgx-graph-summary-f", "--report-format"], [10, 4, 1, "cmdoption-kgx-graph-summary-r", "--report-type"], [10, 4, 1, "cmdoption-kgx-graph-summary-c", "-c"], [10, 4, 1, "cmdoption-kgx-graph-summary-f", "-f"], [10, 4, 1, "cmdoption-kgx-graph-summary-i", "-i"], [10, 4, 1, "cmdoption-kgx-graph-summary-l", "-l"], [10, 4, 1, "cmdoption-kgx-graph-summary-n", "-n"], [10, 4, 1, "cmdoption-kgx-graph-summary-o", "-o"], [10, 4, 1, "cmdoption-kgx-graph-summary-r", "-r"], [10, 4, 1, "cmdoption-kgx-graph-summary-arg-INPUTS", "INPUTS"]], "kgx-merge": [[10, 4, 1, "cmdoption-kgx-merge-destination", "--destination"], [10, 4, 1, "cmdoption-kgx-merge-merge-config", "--merge-config"], [10, 4, 1, "cmdoption-kgx-merge-p", "--processes"], [10, 4, 1, "cmdoption-kgx-merge-source", "--source"], [10, 4, 1, "cmdoption-kgx-merge-p", "-p"]], "kgx-neo4j-download": [[10, 4, 1, "cmdoption-kgx-neo4j-download-e", "--edge-filters"], [10, 4, 1, "cmdoption-kgx-neo4j-download-n", "--node-filters"], [10, 4, 1, "cmdoption-kgx-neo4j-download-o", "--output"], [10, 4, 1, "cmdoption-kgx-neo4j-download-d", "--output-compression"], [10, 4, 1, "cmdoption-kgx-neo4j-download-f", "--output-format"], [10, 4, 1, "cmdoption-kgx-neo4j-download-p", "--password"], [10, 4, 1, "cmdoption-kgx-neo4j-download-s", "--stream"], [10, 4, 1, "cmdoption-kgx-neo4j-download-l", "--uri"], [10, 4, 1, "cmdoption-kgx-neo4j-download-u", "--username"], [10, 4, 1, "cmdoption-kgx-neo4j-download-d", "-d"], [10, 4, 1, "cmdoption-kgx-neo4j-download-e", "-e"], [10, 4, 1, "cmdoption-kgx-neo4j-download-f", "-f"], [10, 4, 1, "cmdoption-kgx-neo4j-download-l", "-l"], [10, 4, 1, "cmdoption-kgx-neo4j-download-n", "-n"], [10, 4, 1, "cmdoption-kgx-neo4j-download-o", "-o"], [10, 4, 1, "cmdoption-kgx-neo4j-download-p", "-p"], [10, 4, 1, "cmdoption-kgx-neo4j-download-s", "-s"], [10, 4, 1, "cmdoption-kgx-neo4j-download-u", "-u"]], "kgx-neo4j-upload": [[10, 4, 1, "cmdoption-kgx-neo4j-upload-e", "--edge-filters"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-c", "--input-compression"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-i", "--input-format"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-n", "--node-filters"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-p", "--password"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-s", "--stream"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-l", "--uri"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-u", "--username"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-c", "-c"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-e", "-e"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-i", "-i"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-l", "-l"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-n", "-n"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-p", "-p"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-s", "-s"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-u", "-u"], [10, 4, 1, "cmdoption-kgx-neo4j-upload-arg-INPUTS", "INPUTS"]], "kgx-transform": [[10, 4, 1, "cmdoption-kgx-transform-e", "--edge-filters"], [10, 4, 1, "cmdoption-kgx-transform-infores-catalog", "--infores-catalog"], [10, 4, 1, "cmdoption-kgx-transform-c", "--input-compression"], [10, 4, 1, "cmdoption-kgx-transform-i", "--input-format"], [10, 4, 1, "cmdoption-kgx-transform-k", "--knowledge-sources"], [10, 4, 1, "cmdoption-kgx-transform-n", "--node-filters"], [10, 4, 1, "cmdoption-kgx-transform-o", "--output"], [10, 4, 1, "cmdoption-kgx-transform-d", "--output-compression"], [10, 4, 1, "cmdoption-kgx-transform-f", "--output-format"], [10, 4, 1, "cmdoption-kgx-transform-p", "--processes"], [10, 4, 1, "cmdoption-kgx-transform-source", "--source"], [10, 4, 1, "cmdoption-kgx-transform-stream", "--stream"], [10, 4, 1, "cmdoption-kgx-transform-transform-config", "--transform-config"], [10, 4, 1, "cmdoption-kgx-transform-c", "-c"], [10, 4, 1, "cmdoption-kgx-transform-d", "-d"], [10, 4, 1, "cmdoption-kgx-transform-e", "-e"], [10, 4, 1, "cmdoption-kgx-transform-f", "-f"], [10, 4, 1, "cmdoption-kgx-transform-i", "-i"], [10, 4, 1, "cmdoption-kgx-transform-k", "-k"], [10, 4, 1, "cmdoption-kgx-transform-n", "-n"], [10, 4, 1, "cmdoption-kgx-transform-o", "-o"], [10, 4, 1, "cmdoption-kgx-transform-p", "-p"], [10, 4, 1, "cmdoption-kgx-transform-arg-INPUTS", "INPUTS"]], "kgx-validate": [[10, 4, 1, "cmdoption-kgx-validate-b", "--biolink-release"], [10, 4, 1, "cmdoption-kgx-validate-c", "--input-compression"], [10, 4, 1, "cmdoption-kgx-validate-i", "--input-format"], [10, 4, 1, "cmdoption-kgx-validate-o", "--output"], [10, 4, 1, "cmdoption-kgx-validate-b", "-b"], [10, 4, 1, "cmdoption-kgx-validate-c", "-c"], [10, 4, 1, "cmdoption-kgx-validate-i", "-i"], [10, 4, 1, "cmdoption-kgx-validate-o", "-o"], [10, 4, 1, "cmdoption-kgx-validate-arg-INPUTS", "INPUTS"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["std", "cmdoption", "program option"]}, "titleterms": {"data": [0, 4, 17, 22, 28], "prepar": 0, "us": [0, 3, 4, 35, 36], "kgx": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36], "file": [0, 5, 26, 27], "develop": [1, 3], "guid": 1, "content": [1, 2], "architectur": 1, "design": 1, "principl": 1, "sourc": [1, 27, 30], "pars": 1, "method": [1, 26], "read_nod": 1, "read_edg": 1, "sink": [1, 26, 29], "__init__": [1, 26], "write_nod": [1, 26], "write_edg": [1, 26], "final": [1, 26], "transform": [1, 6, 10, 28, 36], "scenario": 1, "i": [1, 4], "ii": 1, "iii": 1, "iv": 1, "util": [1, 8, 31, 32, 33, 34], "graph": [1, 10, 12, 15, 16, 17, 22, 31, 35, 36], "oper": [1, 16], "valid": [1, 4, 5, 10, 35, 36], "cli": [1, 8, 10, 36], "convent": 1, "code": 1, "format": [1, 5, 26, 27, 29, 30], "docstr": 1, "guidelin": 1, "type": 1, "continu": 1, "integr": [1, 35], "releas": 1, "roadmap": 1, "welcom": 2, "document": 2, "indic": 2, "tabl": [2, 7], "instal": 3, "user": 3, "from": 3, "pypi": 3, "github": 3, "set": [3, 7], "up": 3, "environ": 3, "poetri": 3, "tradit": 3, "virtual": 3, "test": 3, "biolink": [4, 35], "model": [4, 35], "json": [4, 5, 26, 27], "schema": [4, 6], "tl": 4, "dr": 4, "For": 4, "skeptic": 4, "understand": [4, 35], "The": 4, "simpl": 4, "truth": 4, "how": 4, "It": 4, "work": 4, "hierarchi": 4, "practic": 4, "exampl": [4, 5, 26, 27, 29, 30, 35, 36], "what": 4, "you": 4, "write": 4, "line": [4, 5, 9, 26, 27, 35], "verif": 4, "why": 4, "relationship": 4, "structur": [4, 5, 6, 26, 27], "your": 4, "against": 4, "thi": [4, 6], "address": 4, "common": [4, 5, 26, 27], "concern": 4, "just": 4, "directli": 4, "ad": 4, "extra": 4, "requir": [4, 5, 26, 27], "about": 4, "those": 4, "agent_typ": 4, "valu": 4, "old": 4, "doc": 4, "do": 4, "know": 4, "my": 4, "resourc": 4, "offici": 4, "workflow": 4, "step": 4, "1": 4, "creat": 4, "2": 4, "3": 4, "verifi": 4, "option": [4, 5, 26, 27], "conclus": 4, "specif": [5, 6, 26, 27, 35], "quick": 5, "note": [5, 26], "introduct": 5, "node": [5, 7, 19, 20, 21, 23, 26, 27, 28, 29, 30, 35], "record": [5, 26, 27], "element": 5, "edg": [5, 7, 18, 26, 27, 28, 29, 30, 35], "serial": 5, "tsv": 5, "properti": [5, 18, 20, 23, 26, 27], "usag": [5, 26, 29, 30, 35], "rdf": [5, 7, 34], "turtl": 5, "overview": 6, "purpos": 6, "benefit": [6, 35], "approach": 6, "technic": 6, "implement": 6, "gener": 6, "process": [6, 17, 22], "directori": 6, "makefil": 6, "target": 6, "regener": 6, "detail": 6, "base": 6, "yaml": 6, "futur": 6, "improv": 6, "refer": [6, 24], "map": [7, 29, 30], "star": 7, "input": [7, 30], "column": 7, "prefix": [7, 25], "curi": [7, 11], "expans": 7, "cli_util": 8, "command": [9, 35], "interfac": [9, 35], "summari": [10, 36], "paramet": [10, 26, 29, 30], "merg": [10, 13, 15, 36], "neo4j": [10, 36], "download": [10, 36], "upload": [10, 36], "lookup": 11, "servic": 11, "curie_lookup_servic": 11, "knowledg": [12, 17, 28], "memori": 12, "base_graph": 12, "basegraph": 12, "nx_graph": 12, "nxgraph": 12, "cliqu": 13, "graph_oper": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "clique_merg": 13, "fold": 14, "predic": 14, "fold_pred": 14, "graph_merg": 15, "meta": 17, "stream": [17, 22, 35], "mode": [17, 22], "proven": [17, 28], "statist": 17, "meta_knowledge_graph": 17, "remap": [18, 19, 20], "remap_edge_properti": 18, "identifi": [19, 28], "remap_node_identifi": 19, "remap_node_properti": 20, "remov": 21, "singleton": 21, "remove_singleton_nod": 21, "summar": 22, "summarize_graph": 22, "unfold": 23, "unfold_node_properti": 23, "manag": 25, "prefix_manag": 25, "graph_sink": 26, "tsv_sink": 26, "json_sink": 26, "jsonl_sink": 26, "neo_sink": 26, "rdf_sink": 26, "parquet_sink": 26, "graph_sourc": 27, "tsv_sourc": 27, "json_sourc": 27, "jsonl_sourc": 27, "read": 27, "trapi_sourc": 27, "obograph_sourc": 27, "sssom_sourc": 27, "neo_sourc": 27, "rdf_sourc": 27, "owl_sourc": 27, "inspect": 28, "flow": 28, "infor": 28, "rewrit": 28, "trapi": [29, 30], "convers": [29, 30], "output": 29, "after": 30, "graph_util": 31, "kgx_util": 33, "rdf_util": 34, "kei": 35, "featur": 35, "error": 35, "track": 35, "basic": 35, "version": 35, "larg": 35, "messag": 35, "modul": 36}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Data preparation for use with KGX": [[0, "data-preparation-for-use-with-kgx"]], "Preparing data files": [[0, "preparing-data-files"]], "KGX Developer Guide": [[1, "kgx-developer-guide"]], "Contents": [[1, "contents"]], "Architecture": [[1, "architecture"]], "Design Principles": [[1, "design-principles"]], "Source": [[1, "source"], [27, "source"]], "parse method": [[1, "parse-method"]], "read_nodes method": [[1, "read-nodes-method"]], "read_edges method": [[1, "read-edges-method"]], "Sink": [[1, "sink"], [26, "sink"]], "__init__ method": [[1, "init-method"], [26, "init-method"]], "write_nodes method": [[1, "write-nodes-method"], [26, "write-nodes-method"]], "write_edges method": [[1, "write-edges-method"], [26, "write-edges-method"]], "finalize method": [[1, "finalize-method"], [26, "finalize-method"]], "Transformer": [[1, "transformer"], [28, "transformer"]], "Scenario I": [[1, "scenario-i"]], "Scenario II": [[1, "scenario-ii"]], "Scenario III": [[1, "scenario-iii"]], "Scenario IV": [[1, "scenario-iv"]], "Utils": [[1, "utils"]], "Graph Operations": [[1, "graph-operations"], [16, "graph-operations"]], "Validator": [[1, "validator"]], "KGX CLI": [[1, "kgx-cli"], [10, "kgx-cli"]], "Conventions": [[1, "conventions"]], "Code formatting": [[1, "code-formatting"]], "Docstring guidelines": [[1, "docstring-guidelines"]], "Typing": [[1, "typing"]], "Continuous Integration": [[1, "continuous-integration"]], "Releases": [[1, "releases"]], "Roadmap": [[1, "roadmap"]], "Welcome to the KGX documentation": [[2, "welcome-to-the-kgx-documentation"]], "Documentation": [[2, "documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Installation": [[3, "installation"]], "Installation for users": [[3, "installation-for-users"]], "Installing from PyPI": [[3, "installing-from-pypi"]], "Installing from GitHub": [[3, "installing-from-github"]], "Installation for developers": [[3, "installation-for-developers"]], "Setting up a development environment with Poetry": [[3, "setting-up-a-development-environment-with-poetry"]], "Using a traditional virtual environment": [[3, "using-a-traditional-virtual-environment"]], "Setting up a testing environment": [[3, "setting-up-a-testing-environment"]], "KGX and Biolink Model JSON Schema Validation": [[4, "kgx-and-biolink-model-json-schema-validation"]], "TL;DR - For the Skeptics": [[4, "tl-dr-for-the-skeptics"]], "Understanding KGX Validation": [[4, "understanding-kgx-validation"]], "The Simple Truth": [[4, "the-simple-truth"]], "How It Works": [[4, "how-it-works"]], "The Schema Hierarchy": [[4, "the-schema-hierarchy"]], "Practical Examples": [[4, "practical-examples"]], "What You Write (KGX JSON Lines)": [[4, "what-you-write-kgx-json-lines"]], "What Validates It": [[4, "what-validates-it"]], "Verification": [[4, "verification"]], "Why JSON Lines?": [[4, "why-json-lines"]], "The Schema Relationship": [[4, "the-schema-relationship"]], "Biolink Model JSON Schema Structure": [[4, "biolink-model-json-schema-structure"]], "Your KGX Data Validates Against This": [[4, "your-kgx-data-validates-against-this"]], "Addressing Common Concerns": [[4, "addressing-common-concerns"]], "\u201cWhy not just use the Biolink Model directly?\u201d": [[4, "why-not-just-use-the-biolink-model-directly"]], "\u201cIs KGX adding extra requirements?\u201d": [[4, "is-kgx-adding-extra-requirements"]], "\u201cWhat about those agent_type values in the old docs?\u201d": [[4, "what-about-those-agent-type-values-in-the-old-docs"]], "\u201cHow do I know my data is valid?\u201d": [[4, "how-do-i-know-my-data-is-valid"]], "Resources": [[4, "resources"]], "Official Biolink Model Resources": [[4, "official-biolink-model-resources"]], "KGX Resources": [[4, "kgx-resources"]], "Example Validation Workflow": [[4, "example-validation-workflow"]], "Step 1: Create KGX JSON Lines Data": [[4, "step-1-create-kgx-json-lines-data"]], "Step 2: Validate Using KGX": [[4, "step-2-validate-using-kgx"]], "Step 3: Verify Against Biolink Schema (Optional)": [[4, "step-3-verify-against-biolink-schema-optional"]], "Conclusion": [[4, "conclusion"]], "KGX Specification": [[5, "kgx-specification"]], "Quick Note on Validation": [[5, "quick-note-on-validation"]], "Introduction": [[5, "introduction"]], "KGX Format": [[5, "kgx-format"]], "Node Record Elements": [[5, "node-record-elements"]], "Edge Record Elements": [[5, "edge-record-elements"]], "Format Serializations": [[5, "format-serializations"]], "KGX format as JSON": [[5, "kgx-format-as-json"]], "KGX format as TSV": [[5, "kgx-format-as-tsv"]], "KGX format as JSON Lines": [[5, "kgx-format-as-json-lines"]], "File Structure": [[5, "file-structure"], [26, "file-structure"], [27, "file-structure"]], "Node Record Format": [[5, "node-record-format"], [26, "node-record-format"], [27, "node-record-format"]], "Required Properties": [[5, "required-properties"], [5, "id1"], [26, "required-properties"], [26, "id1"], [27, "required-properties"], [27, "id1"]], "Common Optional Properties": [[5, "common-optional-properties"], [5, "id2"], [26, "common-optional-properties"], [26, "id2"], [27, "common-optional-properties"], [27, "id2"]], "Edge Record Format": [[5, "edge-record-format"], [26, "edge-record-format"], [27, "edge-record-format"]], "Examples": [[5, "examples"], [26, "examples"], [27, "examples"]], "Usage Notes": [[5, "usage-notes"], [26, "usage-notes"]], "KGX format as RDF Turtle": [[5, "kgx-format-as-rdf-turtle"]], "KGX Schema": [[6, "kgx-schema"]], "Overview": [[6, "overview"]], "Purpose": [[6, "purpose"]], "Benefits of This Approach": [[6, "benefits-of-this-approach"]], "Technical Implementation": [[6, "technical-implementation"]], "Schema Generation Process": [[6, "schema-generation-process"]], "Directory Structure": [[6, "directory-structure"]], "Makefile Targets": [[6, "makefile-targets"]], "Regenerating the Schema": [[6, "regenerating-the-schema"]], "Transformation Details": [[6, "transformation-details"]], "Base Schema (kgx.yaml)": [[6, "base-schema-kgx-yaml"]], "Transformation Specification": [[6, "transformation-specification"]], "Future Improvements": [[6, "future-improvements"]], "References": [[6, "references"]], "Mapping kgx to rdf-star": [[7, "mapping-kgx-to-rdf-star"]], "Input Tables": [[7, "input-tables"]], "Input Mappings": [[7, "input-mappings"]], "Column Mappings": [[7, "column-mappings"]], "Prefix Mappings (CURIE expansion)": [[7, "prefix-mappings-curie-expansion"]], "Node Sets": [[7, "node-sets"]], "Edge Sets": [[7, "edge-sets"]], "CLI Utils": [[8, "cli-utils"]], "kgx.cli.cli_utils": [[8, "module-kgx.cli.cli_utils"]], "KGX Command Line Interface": [[9, "kgx-command-line-interface"]], "kgx": [[10, "kgx"]], "graph-summary": [[10, "kgx-graph-summary"], [36, "graph-summary"]], "Parameters": [[10, "parameters"], [10, "id1"], [10, "id2"], [10, "id3"], [10, "id4"], [10, "id5"], [29, "parameters"], [30, "parameters"]], "merge": [[10, "kgx-merge"], [36, "merge"]], "neo4j-download": [[10, "kgx-neo4j-download"], [36, "neo4j-download"]], "neo4j-upload": [[10, "kgx-neo4j-upload"], [36, "neo4j-upload"]], "transform": [[10, "kgx-transform"], [36, "transform"]], "validate": [[10, "kgx-validate"], [36, "validate"]], "CURIE Lookup Service": [[11, "curie-lookup-service"]], "kgx.curie_lookup_service": [[11, "module-kgx.curie_lookup_service"]], "Knowledge Graphs in Memory": [[12, "knowledge-graphs-in-memory"]], "kgx.graph.base_graph.BaseGraph": [[12, "kgx-graph-base-graph-basegraph"]], "kgx.graph.nx_graph.NxGraph": [[12, "kgx-graph-nx-graph-nxgraph"]], "Clique Merge": [[13, "clique-merge"]], "kgx.graph_operations.clique_merge": [[13, "module-kgx.graph_operations.clique_merge"]], "Fold Predicate": [[14, "fold-predicate"]], "kgx.graph_operations.fold_predicate": [[14, "kgx-graph-operations-fold-predicate"]], "Graph Merge": [[15, "graph-merge"]], "kgx.graph_operations.graph_merge": [[15, "module-kgx.graph_operations.graph_merge"]], "Meta Knowledge Graph": [[17, "meta-knowledge-graph"]], "Streaming Data Processing Mode": [[17, "streaming-data-processing-mode"], [22, "streaming-data-processing-mode"]], "Provenance Statistics": [[17, "provenance-statistics"]], "kgx.graph_operations.meta_knowledge_graph": [[17, "module-kgx.graph_operations.meta_knowledge_graph"]], "Remap Edge Property": [[18, "remap-edge-property"]], "kgx.graph_operations.remap_edge_property": [[18, "kgx-graph-operations-remap-edge-property"]], "Remap Node Identifier": [[19, "remap-node-identifier"]], "kgx.graph_operations.remap_node_identifier": [[19, "kgx-graph-operations-remap-node-identifier"]], "Remap Node Property": [[20, "remap-node-property"]], "kgx.graph_operations.remap_node_property": [[20, "kgx-graph-operations-remap-node-property"]], "Remove Singleton Nodes": [[21, "remove-singleton-nodes"]], "kgx.graph_operations.remove_singleton_nodes": [[21, "kgx-graph-operations-remove-singleton-nodes"]], "Summarize Graph": [[22, "summarize-graph"]], "kgx.graph_operations.summarize_graph": [[22, "module-kgx.graph_operations.summarize_graph"]], "Unfold Node Property": [[23, "unfold-node-property"]], "kgx.graph_operations.unfold_node_property": [[23, "kgx-graph-operations-unfold-node-property"]], "Reference": [[24, "reference"]], "Prefix Manager": [[25, "prefix-manager"]], "kgx.prefix_manager": [[25, "module-kgx.prefix_manager"]], "kgx.sink.sink": [[26, "kgx-sink-sink"]], "Parameters:": [[26, "parameters"]], "kgx.sink.graph_sink": [[26, "kgx-sink-graph-sink"]], "kgx.sink.tsv_sink": [[26, "kgx-sink-tsv-sink"]], "kgx.sink.json_sink": [[26, "kgx-sink-json-sink"]], "kgx.sink.jsonl_sink": [[26, "kgx-sink-jsonl-sink"]], "KGX JSON Lines Format Specification": [[26, "kgx-json-lines-format-specification"], [27, "kgx-json-lines-format-specification"]], "kgx.sink.neo_sink": [[26, "kgx-sink-neo-sink"]], "kgx.sink.rdf_sink": [[26, "kgx-sink-rdf-sink"]], "kgx.sink.parquet_sink": [[26, "kgx-sink-parquet-sink"]], "kgx.source.source": [[27, "kgx-source-source"]], "kgx.source.graph_source": [[27, "kgx-source-graph-source"]], "kgx.source.tsv_source": [[27, "kgx-source-tsv-source"]], "kgx.source.json_source": [[27, "kgx-source-json-source"]], "kgx.source.jsonl_source": [[27, "kgx-source-jsonl-source"]], "Reading JSON Lines with KGX": [[27, "reading-json-lines-with-kgx"]], "kgx.source.trapi_source": [[27, "kgx-source-trapi-source"]], "kgx.source.obograph_source": [[27, "kgx-source-obograph-source"]], "kgx.source.sssom_source": [[27, "kgx-source-sssom-source"]], "kgx.source.neo_source": [[27, "kgx-source-neo-source"]], "kgx.source.rdf_source": [[27, "kgx-source-rdf-source"]], "kgx.source.owl_source": [[27, "kgx-source-owl-source"]], "Inspecting the Knowledge Data Flow": [[28, "inspecting-the-knowledge-data-flow"]], "Provenance of Nodes and Edges": [[28, "provenance-of-nodes-and-edges"]], "InfoRes Identifier Rewriting": [[28, "infores-identifier-rewriting"]], "kgx.transformer": [[28, "module-kgx.transformer"]], "TRAPI Sink": [[29, "trapi-sink"]], "Usage": [[29, "usage"], [30, "usage"]], "Format Conversion": [[29, "format-conversion"], [30, "format-conversion"]], "Node Mappings": [[29, "node-mappings"], [30, "node-mappings"]], "Edge Mappings": [[29, "edge-mappings"], [30, "edge-mappings"]], "Output Format": [[29, "output-format"]], "Example Output": [[29, "example-output"]], "Node in TRAPI format": [[29, "node-in-trapi-format"], [30, "node-in-trapi-format"]], "Edge in TRAPI format": [[29, "edge-in-trapi-format"], [30, "edge-in-trapi-format"]], "TRAPI Source": [[30, "trapi-source"]], "Input Format": [[30, "input-format"]], "Example Input": [[30, "example-input"]], "Node in KGX format (after conversion)": [[30, "node-in-kgx-format-after-conversion"]], "Edge in KGX format (after conversion)": [[30, "edge-in-kgx-format-after-conversion"]], "Graph Utils": [[31, "graph-utils"]], "kgx.utils.graph_utils": [[31, "module-kgx.utils.graph_utils"]], "Utilities": [[32, "utilities"]], "KGX Utils": [[33, "kgx-utils"]], "kgx.utils.kgx_utils": [[33, "module-kgx.utils.kgx_utils"]], "RDF Utils": [[34, "rdf-utils"]], "kgx.utils.rdf_utils": [[34, "module-kgx.utils.rdf_utils"]], "KGX Validator": [[35, "kgx-validator"]], "Key Validation Features": [[35, "key-validation-features"]], "Node Validation": [[35, "node-validation"]], "Edge Validation": [[35, "edge-validation"]], "Biolink Model Integration": [[35, "biolink-model-integration"]], "Error Tracking": [[35, "error-tracking"]], "Usage Examples": [[35, "usage-examples"]], "Basic Validation": [[35, "basic-validation"]], "Using a Specific Biolink Model Version": [[35, "using-a-specific-biolink-model-version"]], "Streaming Validation for Large Graphs": [[35, "streaming-validation-for-large-graphs"]], "Command Line Interface": [[35, "command-line-interface"]], "Understanding Validation Messages": [[35, "understanding-validation-messages"]], "Benefits of Validation": [[35, "benefits-of-validation"]], "KGX transformation and validation examples": [[36, "kgx-transformation-and-validation-examples"]], "Using KGX as a module": [[36, "using-kgx-as-a-module"]], "Using KGX CLI": [[36, "using-kgx-cli"]]}, "indexentries": {"apply_operations() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.apply_operations"]], "get_input_file_types() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.get_input_file_types"]], "get_output_file_types() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.get_output_file_types"]], "get_report_format_types() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.get_report_format_types"]], "graph_summary() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.graph_summary"]], "kgx.cli.cli_utils": [[8, "module-kgx.cli.cli_utils"]], "merge() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.merge"]], "module": [[8, "module-kgx.cli.cli_utils"], [11, "module-kgx.curie_lookup_service"], [12, "module-kgx.graph.base_graph"], [12, "module-kgx.graph.nx_graph"], [13, "module-kgx.graph_operations.clique_merge"], [15, "module-kgx.graph_operations.graph_merge"], [17, "module-kgx.graph_operations.meta_knowledge_graph"], [22, "module-kgx.graph_operations.summarize_graph"], [25, "module-kgx.prefix_manager"], [26, "module-kgx.sink.graph_sink"], [26, "module-kgx.sink.json_sink"], [26, "module-kgx.sink.jsonl_sink"], [26, "module-kgx.sink.neo_sink"], [26, "module-kgx.sink.parquet_sink"], [26, "module-kgx.sink.rdf_sink"], [26, "module-kgx.sink.sink"], [26, "module-kgx.sink.tsv_sink"], [27, "module-kgx.source.graph_source"], [27, "module-kgx.source.json_source"], [27, "module-kgx.source.jsonl_source"], [27, "module-kgx.source.neo_source"], [27, "module-kgx.source.obograph_source"], [27, "module-kgx.source.owl_source"], [27, "module-kgx.source.rdf_source"], [27, "module-kgx.source.source"], [27, "module-kgx.source.sssom_source"], [27, "module-kgx.source.trapi_source"], [27, "module-kgx.source.tsv_source"], [28, "module-kgx.transformer"], [31, "module-kgx.utils.graph_utils"], [33, "module-kgx.utils.kgx_utils"], [34, "module-kgx.utils.rdf_utils"]], "neo4j_download() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.neo4j_download"]], "neo4j_upload() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.neo4j_upload"]], "parse_source() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.parse_source"]], "prepare_input_args() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.prepare_input_args"]], "prepare_output_args() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.prepare_output_args"]], "prepare_top_level_args() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.prepare_top_level_args"]], "transform() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.transform"]], "transform_source() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.transform_source"]], "validate() (in module kgx.cli.cli_utils)": [[8, "kgx.cli.cli_utils.validate"]], "--biolink-release": [[10, "cmdoption-kgx-validate-b"]], "--destination": [[10, "cmdoption-kgx-merge-destination"]], "--edge-facet-properties": [[10, "cmdoption-kgx-graph-summary-edge-facet-properties"]], "--edge-filters": [[10, "cmdoption-kgx-neo4j-download-e"], [10, "cmdoption-kgx-neo4j-upload-e"], [10, "cmdoption-kgx-transform-e"]], "--error-log": [[10, "cmdoption-kgx-graph-summary-l"]], "--graph-name": [[10, "cmdoption-kgx-graph-summary-n"]], "--infores-catalog": [[10, "cmdoption-kgx-transform-infores-catalog"]], "--input-compression": [[10, "cmdoption-kgx-graph-summary-c"], [10, "cmdoption-kgx-neo4j-upload-c"], [10, "cmdoption-kgx-transform-c"], [10, "cmdoption-kgx-validate-c"]], "--input-format": [[10, "cmdoption-kgx-graph-summary-i"], [10, "cmdoption-kgx-neo4j-upload-i"], [10, "cmdoption-kgx-transform-i"], [10, "cmdoption-kgx-validate-i"]], "--knowledge-sources": [[10, "cmdoption-kgx-transform-k"]], "--merge-config": [[10, "cmdoption-kgx-merge-merge-config"]], "--node-facet-properties": [[10, "cmdoption-kgx-graph-summary-node-facet-properties"]], "--node-filters": [[10, "cmdoption-kgx-neo4j-download-n"], [10, "cmdoption-kgx-neo4j-upload-n"], [10, "cmdoption-kgx-transform-n"]], "--output": [[10, "cmdoption-kgx-graph-summary-o"], [10, "cmdoption-kgx-neo4j-download-o"], [10, "cmdoption-kgx-transform-o"], [10, "cmdoption-kgx-validate-o"]], "--output-compression": [[10, "cmdoption-kgx-neo4j-download-d"], [10, "cmdoption-kgx-transform-d"]], "--output-format": [[10, "cmdoption-kgx-neo4j-download-f"], [10, "cmdoption-kgx-transform-f"]], "--password": [[10, "cmdoption-kgx-neo4j-download-p"], [10, "cmdoption-kgx-neo4j-upload-p"]], "--processes": [[10, "cmdoption-kgx-merge-p"], [10, "cmdoption-kgx-transform-p"]], "--report-format": [[10, "cmdoption-kgx-graph-summary-f"]], "--report-type": [[10, "cmdoption-kgx-graph-summary-r"]], "--source": [[10, "cmdoption-kgx-merge-source"], [10, "cmdoption-kgx-transform-source"]], "--stream": [[10, "cmdoption-kgx-neo4j-download-s"], [10, "cmdoption-kgx-neo4j-upload-s"], [10, "cmdoption-kgx-transform-stream"]], "--transform-config": [[10, "cmdoption-kgx-transform-transform-config"]], "--uri": [[10, "cmdoption-kgx-neo4j-download-l"], [10, "cmdoption-kgx-neo4j-upload-l"]], "--username": [[10, "cmdoption-kgx-neo4j-download-u"], [10, "cmdoption-kgx-neo4j-upload-u"]], "--version": [[10, "cmdoption-kgx-version"]], "-b": [[10, "cmdoption-kgx-validate-b"]], "-c": [[10, "cmdoption-kgx-graph-summary-c"], [10, "cmdoption-kgx-neo4j-upload-c"], [10, "cmdoption-kgx-transform-c"], [10, "cmdoption-kgx-validate-c"]], "-d": [[10, "cmdoption-kgx-neo4j-download-d"], [10, "cmdoption-kgx-transform-d"]], "-e": [[10, "cmdoption-kgx-neo4j-download-e"], [10, "cmdoption-kgx-neo4j-upload-e"], [10, "cmdoption-kgx-transform-e"]], "-f": [[10, "cmdoption-kgx-graph-summary-f"], [10, "cmdoption-kgx-neo4j-download-f"], [10, "cmdoption-kgx-transform-f"]], "-i": [[10, "cmdoption-kgx-graph-summary-i"], [10, "cmdoption-kgx-neo4j-upload-i"], [10, "cmdoption-kgx-transform-i"], [10, "cmdoption-kgx-validate-i"]], "-k": [[10, "cmdoption-kgx-transform-k"]], "-l": [[10, "cmdoption-kgx-graph-summary-l"], [10, "cmdoption-kgx-neo4j-download-l"], [10, "cmdoption-kgx-neo4j-upload-l"]], "-n": [[10, "cmdoption-kgx-graph-summary-n"], [10, "cmdoption-kgx-neo4j-download-n"], [10, "cmdoption-kgx-neo4j-upload-n"], [10, "cmdoption-kgx-transform-n"]], "-o": [[10, "cmdoption-kgx-graph-summary-o"], [10, "cmdoption-kgx-neo4j-download-o"], [10, "cmdoption-kgx-transform-o"], [10, "cmdoption-kgx-validate-o"]], "-p": [[10, "cmdoption-kgx-merge-p"], [10, "cmdoption-kgx-neo4j-download-p"], [10, "cmdoption-kgx-neo4j-upload-p"], [10, "cmdoption-kgx-transform-p"]], "-r": [[10, "cmdoption-kgx-graph-summary-r"]], "-s": [[10, "cmdoption-kgx-neo4j-download-s"], [10, "cmdoption-kgx-neo4j-upload-s"]], "-u": [[10, "cmdoption-kgx-neo4j-download-u"], [10, "cmdoption-kgx-neo4j-upload-u"]], "inputs": [[10, "cmdoption-kgx-graph-summary-arg-INPUTS"], [10, "cmdoption-kgx-neo4j-upload-arg-INPUTS"], [10, "cmdoption-kgx-transform-arg-INPUTS"], [10, "cmdoption-kgx-validate-arg-INPUTS"]], "kgx command line option": [[10, "cmdoption-kgx-version"]], "kgx-graph-summary command line option": [[10, "cmdoption-kgx-graph-summary-arg-INPUTS"], [10, "cmdoption-kgx-graph-summary-c"], [10, "cmdoption-kgx-graph-summary-edge-facet-properties"], [10, "cmdoption-kgx-graph-summary-f"], [10, "cmdoption-kgx-graph-summary-i"], [10, "cmdoption-kgx-graph-summary-l"], [10, "cmdoption-kgx-graph-summary-n"], [10, "cmdoption-kgx-graph-summary-node-facet-properties"], [10, "cmdoption-kgx-graph-summary-o"], [10, "cmdoption-kgx-graph-summary-r"]], "kgx-merge command line option": [[10, "cmdoption-kgx-merge-destination"], [10, "cmdoption-kgx-merge-merge-config"], [10, "cmdoption-kgx-merge-p"], [10, "cmdoption-kgx-merge-source"]], "kgx-neo4j-download command line option": [[10, "cmdoption-kgx-neo4j-download-d"], [10, "cmdoption-kgx-neo4j-download-e"], [10, "cmdoption-kgx-neo4j-download-f"], [10, "cmdoption-kgx-neo4j-download-l"], [10, "cmdoption-kgx-neo4j-download-n"], [10, "cmdoption-kgx-neo4j-download-o"], [10, "cmdoption-kgx-neo4j-download-p"], [10, "cmdoption-kgx-neo4j-download-s"], [10, "cmdoption-kgx-neo4j-download-u"]], "kgx-neo4j-upload command line option": [[10, "cmdoption-kgx-neo4j-upload-arg-INPUTS"], [10, "cmdoption-kgx-neo4j-upload-c"], [10, "cmdoption-kgx-neo4j-upload-e"], [10, "cmdoption-kgx-neo4j-upload-i"], [10, "cmdoption-kgx-neo4j-upload-l"], [10, "cmdoption-kgx-neo4j-upload-n"], [10, "cmdoption-kgx-neo4j-upload-p"], [10, "cmdoption-kgx-neo4j-upload-s"], [10, "cmdoption-kgx-neo4j-upload-u"]], "kgx-transform command line option": [[10, "cmdoption-kgx-transform-arg-INPUTS"], [10, "cmdoption-kgx-transform-c"], [10, "cmdoption-kgx-transform-d"], [10, "cmdoption-kgx-transform-e"], [10, "cmdoption-kgx-transform-f"], [10, "cmdoption-kgx-transform-i"], [10, "cmdoption-kgx-transform-infores-catalog"], [10, "cmdoption-kgx-transform-k"], [10, "cmdoption-kgx-transform-n"], [10, "cmdoption-kgx-transform-o"], [10, "cmdoption-kgx-transform-p"], [10, "cmdoption-kgx-transform-source"], [10, "cmdoption-kgx-transform-stream"], [10, "cmdoption-kgx-transform-transform-config"]], "kgx-validate command line option": [[10, "cmdoption-kgx-validate-arg-INPUTS"], [10, "cmdoption-kgx-validate-b"], [10, "cmdoption-kgx-validate-c"], [10, "cmdoption-kgx-validate-i"], [10, "cmdoption-kgx-validate-o"]], "curielookupservice (class in kgx.curie_lookup_service)": [[11, "kgx.curie_lookup_service.CurieLookupService"]], "kgx.curie_lookup_service": [[11, "module-kgx.curie_lookup_service"]], "load_ontologies() (kgx.curie_lookup_service.curielookupservice method)": [[11, "kgx.curie_lookup_service.CurieLookupService.load_ontologies"]], "basegraph (class in kgx.graph.base_graph)": [[12, "kgx.graph.base_graph.BaseGraph"]], "nxgraph (class in kgx.graph.nx_graph)": [[12, "kgx.graph.nx_graph.NxGraph"]], "add_edge() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.add_edge"]], "add_edge() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.add_edge"]], "add_edge_attribute() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.add_edge_attribute"]], "add_edge_attribute() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.add_edge_attribute"]], "add_node() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.add_node"]], "add_node() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.add_node"]], "add_node_attribute() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.add_node_attribute"]], "add_node_attribute() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.add_node_attribute"]], "clear() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.clear"]], "clear() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.clear"]], "degree() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.degree"]], "degree() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.degree"]], "edges() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.edges"]], "edges() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.edges"]], "edges_iter() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.edges_iter"]], "edges_iter() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.edges_iter"]], "get_edge() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.get_edge"]], "get_edge() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.get_edge"]], "get_edge_attributes() (kgx.graph.base_graph.basegraph static method)": [[12, "kgx.graph.base_graph.BaseGraph.get_edge_attributes"]], "get_edge_attributes() (kgx.graph.nx_graph.nxgraph static method)": [[12, "kgx.graph.nx_graph.NxGraph.get_edge_attributes"]], "get_node() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.get_node"]], "get_node() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.get_node"]], "get_node_attributes() (kgx.graph.base_graph.basegraph static method)": [[12, "kgx.graph.base_graph.BaseGraph.get_node_attributes"]], "get_node_attributes() (kgx.graph.nx_graph.nxgraph static method)": [[12, "kgx.graph.nx_graph.NxGraph.get_node_attributes"]], "has_edge() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.has_edge"]], "has_edge() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.has_edge"]], "has_node() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.has_node"]], "has_node() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.has_node"]], "in_edges() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.in_edges"]], "in_edges() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.in_edges"]], "kgx.graph.base_graph": [[12, "module-kgx.graph.base_graph"]], "kgx.graph.nx_graph": [[12, "module-kgx.graph.nx_graph"]], "nodes() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.nodes"]], "nodes() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.nodes"]], "nodes_iter() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.nodes_iter"]], "nodes_iter() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.nodes_iter"]], "number_of_edges() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.number_of_edges"]], "number_of_edges() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.number_of_edges"]], "number_of_nodes() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.number_of_nodes"]], "number_of_nodes() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.number_of_nodes"]], "out_edges() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.out_edges"]], "out_edges() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.out_edges"]], "relabel_nodes() (kgx.graph.base_graph.basegraph static method)": [[12, "kgx.graph.base_graph.BaseGraph.relabel_nodes"]], "relabel_nodes() (kgx.graph.nx_graph.nxgraph static method)": [[12, "kgx.graph.nx_graph.NxGraph.relabel_nodes"]], "remove_edge() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.remove_edge"]], "remove_edge() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.remove_edge"]], "remove_node() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.remove_node"]], "remove_node() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.remove_node"]], "set_edge_attributes() (kgx.graph.base_graph.basegraph static method)": [[12, "kgx.graph.base_graph.BaseGraph.set_edge_attributes"]], "set_edge_attributes() (kgx.graph.nx_graph.nxgraph static method)": [[12, "kgx.graph.nx_graph.NxGraph.set_edge_attributes"]], "set_node_attributes() (kgx.graph.base_graph.basegraph static method)": [[12, "kgx.graph.base_graph.BaseGraph.set_node_attributes"]], "set_node_attributes() (kgx.graph.nx_graph.nxgraph static method)": [[12, "kgx.graph.nx_graph.NxGraph.set_node_attributes"]], "update_edge_attribute() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.update_edge_attribute"]], "update_edge_attribute() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.update_edge_attribute"]], "update_node_attribute() (kgx.graph.base_graph.basegraph method)": [[12, "kgx.graph.base_graph.BaseGraph.update_node_attribute"]], "update_node_attribute() (kgx.graph.nx_graph.nxgraph method)": [[12, "kgx.graph.nx_graph.NxGraph.update_node_attribute"]], "build_cliques() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.build_cliques"]], "check_all_categories() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.check_all_categories"]], "check_categories() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.check_categories"]], "clique_merge() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.clique_merge"]], "consolidate_edges() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.consolidate_edges"]], "elect_leader() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.elect_leader"]], "get_category_from_equivalence() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.get_category_from_equivalence"]], "get_clique_category() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.get_clique_category"]], "get_leader_by_annotation() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.get_leader_by_annotation"]], "get_leader_by_prefix_priority() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.get_leader_by_prefix_priority"]], "get_leader_by_sort() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.get_leader_by_sort"]], "kgx.graph_operations.clique_merge": [[13, "module-kgx.graph_operations.clique_merge"]], "sort_categories() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.sort_categories"]], "update_node_categories() (in module kgx.graph_operations.clique_merge)": [[13, "kgx.graph_operations.clique_merge.update_node_categories"]], "fold_predicate() (in module kgx.graph_operations)": [[14, "kgx.graph_operations.fold_predicate"]], "add_all_edges() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.add_all_edges"]], "add_all_nodes() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.add_all_nodes"]], "kgx.graph_operations.graph_merge": [[15, "module-kgx.graph_operations.graph_merge"]], "merge_all_graphs() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.merge_all_graphs"]], "merge_edge() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.merge_edge"]], "merge_graphs() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.merge_graphs"]], "merge_node() (in module kgx.graph_operations.graph_merge)": [[15, "kgx.graph_operations.graph_merge.merge_node"]], "metaknowledgegraph (class in kgx.graph_operations.meta_knowledge_graph)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph"]], "metaknowledgegraph.category (class in kgx.graph_operations.meta_knowledge_graph)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category"]], "analyse_edge() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.analyse_edge"]], "analyse_node() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.analyse_node"]], "analyse_node_category() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.analyse_node_category"]], "clear_errors() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.clear_errors"]], "generate_meta_knowledge_graph() (in module kgx.graph_operations.meta_knowledge_graph)": [[17, "kgx.graph_operations.meta_knowledge_graph.generate_meta_knowledge_graph"]], "get_category() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_category"]], "get_category_curie_from_index() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category class method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_category_curie_from_index"]], "get_cid() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_cid"]], "get_count() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_count"]], "get_count_by_source() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_count_by_source"]], "get_edge_count_by_predicate() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_edge_count_by_predicate"]], "get_edge_count_by_source() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_edge_count_by_source"]], "get_edge_mapping_count() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_edge_mapping_count"]], "get_edge_stats() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_edge_stats"]], "get_errors() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_errors"]], "get_facet_counts() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph static method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_facet_counts"]], "get_graph_summary() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_graph_summary"]], "get_id_prefixes() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_id_prefixes"]], "get_name() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_name"]], "get_name() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.get_name"]], "get_node_count_by_category() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_node_count_by_category"]], "get_node_stats() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_node_stats"]], "get_number_of_categories() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_number_of_categories"]], "get_predicate_count() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_predicate_count"]], "get_total_edge_counts_across_mappings() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_total_edge_counts_across_mappings"]], "get_total_edges_count() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_total_edges_count"]], "get_total_node_counts_across_categories() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_total_node_counts_across_categories"]], "get_total_nodes_count() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.get_total_nodes_count"]], "json_object() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph.category method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.Category.json_object"]], "kgx.graph_operations.meta_knowledge_graph": [[17, "module-kgx.graph_operations.meta_knowledge_graph"]], "log_error() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.log_error"]], "mkg_default() (in module kgx.graph_operations.meta_knowledge_graph)": [[17, "kgx.graph_operations.meta_knowledge_graph.mkg_default"]], "save() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.save"]], "summarize_graph() (in module kgx.graph_operations.meta_knowledge_graph)": [[17, "kgx.graph_operations.meta_knowledge_graph.summarize_graph"]], "summarize_graph() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.summarize_graph"]], "summarize_graph_edges() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.summarize_graph_edges"]], "summarize_graph_nodes() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.summarize_graph_nodes"]], "write_report() (kgx.graph_operations.meta_knowledge_graph.metaknowledgegraph method)": [[17, "kgx.graph_operations.meta_knowledge_graph.MetaKnowledgeGraph.write_report"]], "remap_edge_property() (in module kgx.graph_operations)": [[18, "kgx.graph_operations.remap_edge_property"]], "remap_node_identifier() (in module kgx.graph_operations)": [[19, "kgx.graph_operations.remap_node_identifier"]], "remap_node_property() (in module kgx.graph_operations)": [[20, "kgx.graph_operations.remap_node_property"]], "remove_singleton_nodes() (in module kgx.graph_operations)": [[21, "kgx.graph_operations.remove_singleton_nodes"]], "graphsummary (class in kgx.graph_operations.summarize_graph)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary"]], "graphsummary.category (class in kgx.graph_operations.summarize_graph)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category"]], "add_node_stat() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.add_node_stat"]], "analyse_edge() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.analyse_edge"]], "analyse_node() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.analyse_node"]], "analyse_node_category() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.analyse_node_category"]], "clear_errors() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.clear_errors"]], "generate_graph_stats() (in module kgx.graph_operations.summarize_graph)": [[22, "kgx.graph_operations.summarize_graph.generate_graph_stats"]], "get_category() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_category"]], "get_category_curie_by_index() (kgx.graph_operations.summarize_graph.graphsummary.category class method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_category_curie_by_index"]], "get_cid() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_cid"]], "get_count() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_count"]], "get_count_by_id_prefixes() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_count_by_id_prefixes"]], "get_errors() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_errors"]], "get_facet_counts() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_facet_counts"]], "get_graph_summary() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_graph_summary"]], "get_id_prefixes() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_id_prefixes"]], "get_name() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_name"]], "get_name() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.get_name"]], "get_node_stats() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.get_node_stats"]], "gs_default() (in module kgx.graph_operations.summarize_graph)": [[22, "kgx.graph_operations.summarize_graph.gs_default"]], "json_object() (kgx.graph_operations.summarize_graph.graphsummary.category method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.Category.json_object"]], "kgx.graph_operations.summarize_graph": [[22, "module-kgx.graph_operations.summarize_graph"]], "log_error() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.log_error"]], "save() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.save"]], "summarize_graph() (in module kgx.graph_operations.summarize_graph)": [[22, "kgx.graph_operations.summarize_graph.summarize_graph"]], "summarize_graph() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.summarize_graph"]], "summarize_graph_edges() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.summarize_graph_edges"]], "summarize_graph_nodes() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.summarize_graph_nodes"]], "write_report() (kgx.graph_operations.summarize_graph.graphsummary method)": [[22, "kgx.graph_operations.summarize_graph.GraphSummary.write_report"]], "unfold_node_property() (in module kgx.graph_operations)": [[23, "kgx.graph_operations.unfold_node_property"]], "prefixmanager (class in kgx.prefix_manager)": [[25, "kgx.prefix_manager.PrefixManager"]], "contract() (kgx.prefix_manager.prefixmanager method)": [[25, "kgx.prefix_manager.PrefixManager.contract"]], "expand() (kgx.prefix_manager.prefixmanager method)": [[25, "kgx.prefix_manager.PrefixManager.expand"]], "get_prefix() (kgx.prefix_manager.prefixmanager static method)": [[25, "kgx.prefix_manager.PrefixManager.get_prefix"]], "get_reference() (kgx.prefix_manager.prefixmanager static method)": [[25, "kgx.prefix_manager.PrefixManager.get_reference"]], "is_curie() (kgx.prefix_manager.prefixmanager static method)": [[25, "kgx.prefix_manager.PrefixManager.is_curie"]], "is_iri() (kgx.prefix_manager.prefixmanager static method)": [[25, "kgx.prefix_manager.PrefixManager.is_iri"]], "kgx.prefix_manager": [[25, "module-kgx.prefix_manager"]], "set_prefix_map() (kgx.prefix_manager.prefixmanager method)": [[25, "kgx.prefix_manager.PrefixManager.set_prefix_map"]], "update_prefix_map() (kgx.prefix_manager.prefixmanager method)": [[25, "kgx.prefix_manager.PrefixManager.update_prefix_map"]], "update_reverse_prefix_map() (kgx.prefix_manager.prefixmanager method)": [[25, "kgx.prefix_manager.PrefixManager.update_reverse_prefix_map"]], "graphsink (class in kgx.sink.graph_sink)": [[26, "kgx.sink.graph_sink.GraphSink"]], "jsonsink (class in kgx.sink.json_sink)": [[26, "kgx.sink.json_sink.JsonSink"]], "jsonlsink (class in kgx.sink.jsonl_sink)": [[26, "kgx.sink.jsonl_sink.JsonlSink"]], "neosink (class in kgx.sink.neo_sink)": [[26, "kgx.sink.neo_sink.NeoSink"]], "parquetsink (class in kgx.sink.parquet_sink)": [[26, "kgx.sink.parquet_sink.ParquetSink"]], "rdfsink (class in kgx.sink.rdf_sink)": [[26, "kgx.sink.rdf_sink.RdfSink"]], "sink (class in kgx.sink.sink)": [[26, "kgx.sink.sink.Sink"]], "tsvsink (class in kgx.sink.tsv_sink)": [[26, "kgx.sink.tsv_sink.TsvSink"]], "create_constraint_query() (kgx.sink.neo_sink.neosink static method)": [[26, "kgx.sink.neo_sink.NeoSink.create_constraint_query"]], "create_constraints() (kgx.sink.neo_sink.neosink method)": [[26, "kgx.sink.neo_sink.NeoSink.create_constraints"]], "finalize() (kgx.sink.graph_sink.graphsink method)": [[26, "kgx.sink.graph_sink.GraphSink.finalize"]], "finalize() (kgx.sink.json_sink.jsonsink method)": [[26, "kgx.sink.json_sink.JsonSink.finalize"]], "finalize() (kgx.sink.jsonl_sink.jsonlsink method)": [[26, "kgx.sink.jsonl_sink.JsonlSink.finalize"]], "finalize() (kgx.sink.neo_sink.neosink method)": [[26, "kgx.sink.neo_sink.NeoSink.finalize"]], "finalize() (kgx.sink.parquet_sink.parquetsink method)": [[26, "kgx.sink.parquet_sink.ParquetSink.finalize"]], "finalize() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.finalize"]], "finalize() (kgx.sink.sink.sink method)": [[26, "kgx.sink.sink.Sink.finalize"]], "finalize() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.finalize"]], "generate_unwind_edge_query() (kgx.sink.neo_sink.neosink static method)": [[26, "kgx.sink.neo_sink.NeoSink.generate_unwind_edge_query"]], "generate_unwind_node_query() (kgx.sink.neo_sink.neosink static method)": [[26, "kgx.sink.neo_sink.NeoSink.generate_unwind_node_query"]], "get_biolink_element() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.get_biolink_element"]], "kgx.sink.graph_sink": [[26, "module-kgx.sink.graph_sink"]], "kgx.sink.json_sink": [[26, "module-kgx.sink.json_sink"]], "kgx.sink.jsonl_sink": [[26, "module-kgx.sink.jsonl_sink"]], "kgx.sink.neo_sink": [[26, "module-kgx.sink.neo_sink"]], "kgx.sink.parquet_sink": [[26, "module-kgx.sink.parquet_sink"]], "kgx.sink.rdf_sink": [[26, "module-kgx.sink.rdf_sink"]], "kgx.sink.sink": [[26, "module-kgx.sink.sink"]], "kgx.sink.tsv_sink": [[26, "module-kgx.sink.tsv_sink"]], "process_predicate() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.process_predicate"]], "reify() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.reify"]], "sanitize_category() (kgx.sink.neo_sink.neosink static method)": [[26, "kgx.sink.neo_sink.NeoSink.sanitize_category"]], "set_edge_properties() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.set_edge_properties"]], "set_node_properties() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.set_node_properties"]], "set_property_types() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.set_property_types"]], "set_reverse_predicate_mapping() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.set_reverse_predicate_mapping"]], "set_reverse_prefix_map() (kgx.sink.graph_sink.graphsink method)": [[26, "kgx.sink.graph_sink.GraphSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.json_sink.jsonsink method)": [[26, "kgx.sink.json_sink.JsonSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.jsonl_sink.jsonlsink method)": [[26, "kgx.sink.jsonl_sink.JsonlSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.neo_sink.neosink method)": [[26, "kgx.sink.neo_sink.NeoSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.parquet_sink.parquetsink method)": [[26, "kgx.sink.parquet_sink.ParquetSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.sink.sink method)": [[26, "kgx.sink.sink.Sink.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.set_reverse_prefix_map"]], "uriref() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.uriref"]], "write_edge() (kgx.sink.graph_sink.graphsink method)": [[26, "kgx.sink.graph_sink.GraphSink.write_edge"]], "write_edge() (kgx.sink.json_sink.jsonsink method)": [[26, "kgx.sink.json_sink.JsonSink.write_edge"]], "write_edge() (kgx.sink.jsonl_sink.jsonlsink method)": [[26, "kgx.sink.jsonl_sink.JsonlSink.write_edge"]], "write_edge() (kgx.sink.neo_sink.neosink method)": [[26, "kgx.sink.neo_sink.NeoSink.write_edge"]], "write_edge() (kgx.sink.parquet_sink.parquetsink method)": [[26, "kgx.sink.parquet_sink.ParquetSink.write_edge"]], "write_edge() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.write_edge"]], "write_edge() (kgx.sink.sink.sink method)": [[26, "kgx.sink.sink.Sink.write_edge"]], "write_edge() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.write_edge"]], "write_node() (kgx.sink.graph_sink.graphsink method)": [[26, "kgx.sink.graph_sink.GraphSink.write_node"]], "write_node() (kgx.sink.json_sink.jsonsink method)": [[26, "kgx.sink.json_sink.JsonSink.write_node"]], "write_node() (kgx.sink.jsonl_sink.jsonlsink method)": [[26, "kgx.sink.jsonl_sink.JsonlSink.write_node"]], "write_node() (kgx.sink.neo_sink.neosink method)": [[26, "kgx.sink.neo_sink.NeoSink.write_node"]], "write_node() (kgx.sink.parquet_sink.parquetsink method)": [[26, "kgx.sink.parquet_sink.ParquetSink.write_node"]], "write_node() (kgx.sink.rdf_sink.rdfsink method)": [[26, "kgx.sink.rdf_sink.RdfSink.write_node"]], "write_node() (kgx.sink.sink.sink method)": [[26, "kgx.sink.sink.Sink.write_node"]], "write_node() (kgx.sink.tsv_sink.tsvsink method)": [[26, "kgx.sink.tsv_sink.TsvSink.write_node"]], "graphsource (class in kgx.source.graph_source)": [[27, "kgx.source.graph_source.GraphSource"]], "jsonsource (class in kgx.source.json_source)": [[27, "kgx.source.json_source.JsonSource"]], "jsonlsource (class in kgx.source.jsonl_source)": [[27, "kgx.source.jsonl_source.JsonlSource"]], "neosource (class in kgx.source.neo_source)": [[27, "kgx.source.neo_source.NeoSource"]], "obographsource (class in kgx.source.obograph_source)": [[27, "kgx.source.obograph_source.ObographSource"]], "owlsource (class in kgx.source.owl_source)": [[27, "kgx.source.owl_source.OwlSource"]], "rdfsource (class in kgx.source.rdf_source)": [[27, "kgx.source.rdf_source.RdfSource"]], "source (class in kgx.source.source)": [[27, "kgx.source.source.Source"]], "sssomsource (class in kgx.source.sssom_source)": [[27, "kgx.source.sssom_source.SssomSource"]], "trapisource (class in kgx.source.trapi_source)": [[27, "kgx.source.trapi_source.TrapiSource"]], "tsvsource (class in kgx.source.tsv_source)": [[27, "kgx.source.tsv_source.TsvSource"]], "add_edge() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.add_edge"]], "add_edge() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.add_edge"]], "add_node() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.add_node"]], "add_node() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.add_node"]], "add_node_attribute() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.add_node_attribute"]], "add_node_attribute() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.add_node_attribute"]], "check_edge_filter() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.check_edge_filter"]], "check_edge_filter() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.check_edge_filter"]], "check_edge_filter() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.check_edge_filter"]], "check_edge_filter() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.check_edge_filter"]], "check_edge_filter() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.check_edge_filter"]], "check_edge_filter() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.check_edge_filter"]], "check_edge_filter() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.check_edge_filter"]], "check_edge_filter() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.check_edge_filter"]], "check_edge_filter() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.check_edge_filter"]], "check_edge_filter() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.check_edge_filter"]], "check_edge_filter() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.check_edge_filter"]], "check_node_filter() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.check_node_filter"]], "check_node_filter() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.check_node_filter"]], "check_node_filter() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.check_node_filter"]], "check_node_filter() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.check_node_filter"]], "check_node_filter() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.check_node_filter"]], "check_node_filter() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.check_node_filter"]], "check_node_filter() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.check_node_filter"]], "check_node_filter() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.check_node_filter"]], "check_node_filter() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.check_node_filter"]], "check_node_filter() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.check_node_filter"]], "check_node_filter() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.check_node_filter"]], "clear_graph_metadata() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.clear_graph_metadata"]], "clear_graph_metadata() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.clear_graph_metadata"]], "count() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.count"]], "dereify() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.dereify"]], "dereify() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.dereify"]], "format_edge_filter() (kgx.source.neo_source.neosource static method)": [[27, "kgx.source.neo_source.NeoSource.format_edge_filter"]], "format_node_filter() (kgx.source.neo_source.neosource static method)": [[27, "kgx.source.neo_source.NeoSource.format_node_filter"]], "get_biolink_element() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.get_biolink_element"]], "get_biolink_element() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.get_biolink_element"]], "get_category() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.get_category"]], "get_edges() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.get_edges"]], "get_infores_catalog() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.get_infores_catalog"]], "get_infores_catalog() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.get_infores_catalog"]], "get_infores_catalog() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.get_infores_catalog"]], "get_nodes() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.get_nodes"]], "get_pages() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.get_pages"]], "kgx.source.graph_source": [[27, "module-kgx.source.graph_source"]], "kgx.source.json_source": [[27, "module-kgx.source.json_source"]], "kgx.source.jsonl_source": [[27, "module-kgx.source.jsonl_source"]], "kgx.source.neo_source": [[27, "module-kgx.source.neo_source"]], "kgx.source.obograph_source": [[27, "module-kgx.source.obograph_source"]], "kgx.source.owl_source": [[27, "module-kgx.source.owl_source"]], "kgx.source.rdf_source": [[27, "module-kgx.source.rdf_source"]], "kgx.source.source": [[27, "module-kgx.source.source"]], "kgx.source.sssom_source": [[27, "module-kgx.source.sssom_source"]], "kgx.source.trapi_source": [[27, "module-kgx.source.trapi_source"]], "kgx.source.tsv_source": [[27, "module-kgx.source.tsv_source"]], "load_edge() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.load_edge"]], "load_edge() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.load_edge"]], "load_edge() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.load_edge"]], "load_edges() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.load_edges"]], "load_edges() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.load_edges"]], "load_graph() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.load_graph"]], "load_node() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.load_node"]], "load_node() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.load_node"]], "load_node() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.load_node"]], "load_nodes() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.load_nodes"]], "parse() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.parse"]], "parse() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.parse"]], "parse() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.parse"]], "parse() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.parse"]], "parse() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.parse"]], "parse() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.parse"]], "parse() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.parse"]], "parse() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.parse"]], "parse() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.parse"]], "parse() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.parse"]], "parse_header() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.parse_header"]], "parse_meta() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.parse_meta"]], "process_predicate() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.process_predicate"]], "process_predicate() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.process_predicate"]], "read_edge() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.read_edge"]], "read_edge() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.read_edge"]], "read_edge() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.read_edge"]], "read_edge() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_edge"]], "read_edge() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.read_edge"]], "read_edges() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.read_edges"]], "read_edges() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.read_edges"]], "read_edges() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.read_edges"]], "read_edges() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.read_edges"]], "read_edges() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_edges"]], "read_edges() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.read_edges"]], "read_edges_jsonl() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_edges_jsonl"]], "read_node() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.read_node"]], "read_node() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.read_node"]], "read_node() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.read_node"]], "read_node() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_node"]], "read_node() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.read_node"]], "read_nodes() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.read_nodes"]], "read_nodes() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.read_nodes"]], "read_nodes() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.read_nodes"]], "read_nodes() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.read_nodes"]], "read_nodes() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_nodes"]], "read_nodes() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.read_nodes"]], "read_nodes_jsonl() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.read_nodes_jsonl"]], "set_edge_filter() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_edge_filter"]], "set_edge_filter() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_edge_filter"]], "set_edge_filter() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_edge_filter"]], "set_edge_filter() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_edge_filter"]], "set_edge_filter() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_edge_filter"]], "set_edge_filter() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_edge_filter"]], "set_edge_filter() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_edge_filter"]], "set_edge_filter() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_edge_filter"]], "set_edge_filter() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_edge_filter"]], "set_edge_filter() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_edge_filter"]], "set_edge_filter() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_edge_filter"]], "set_edge_filters() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_edge_filters"]], "set_edge_filters() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_edge_filters"]], "set_edge_filters() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_edge_filters"]], "set_edge_filters() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_edge_filters"]], "set_edge_filters() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_edge_filters"]], "set_edge_filters() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_edge_filters"]], "set_edge_filters() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_edge_filters"]], "set_edge_filters() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_edge_filters"]], "set_edge_filters() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_edge_filters"]], "set_edge_filters() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_edge_filters"]], "set_edge_filters() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_edge_filters"]], "set_edge_provenance() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_edge_provenance"]], "set_edge_provenance() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_edge_provenance"]], "set_edge_provenance() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_edge_provenance"]], "set_node_filter() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_node_filter"]], "set_node_filter() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_node_filter"]], "set_node_filter() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_node_filter"]], "set_node_filter() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_node_filter"]], "set_node_filter() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_node_filter"]], "set_node_filter() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_node_filter"]], "set_node_filter() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_node_filter"]], "set_node_filter() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_node_filter"]], "set_node_filter() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_node_filter"]], "set_node_filter() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_node_filter"]], "set_node_filter() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_node_filter"]], "set_node_filters() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_node_filters"]], "set_node_filters() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_node_filters"]], "set_node_filters() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_node_filters"]], "set_node_filters() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_node_filters"]], "set_node_filters() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_node_filters"]], "set_node_filters() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_node_filters"]], "set_node_filters() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_node_filters"]], "set_node_filters() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_node_filters"]], "set_node_filters() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_node_filters"]], "set_node_filters() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_node_filters"]], "set_node_filters() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_node_filters"]], "set_node_property_predicates() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_node_property_predicates"]], "set_node_property_predicates() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_node_property_predicates"]], "set_node_provenance() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_node_provenance"]], "set_node_provenance() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_node_provenance"]], "set_node_provenance() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_node_provenance"]], "set_node_provenance() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_node_provenance"]], "set_node_provenance() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_node_provenance"]], "set_node_provenance() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_node_provenance"]], "set_node_provenance() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_node_provenance"]], "set_node_provenance() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_node_provenance"]], "set_node_provenance() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_node_provenance"]], "set_node_provenance() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_node_provenance"]], "set_node_provenance() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_node_provenance"]], "set_predicate_mapping() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_predicate_mapping"]], "set_predicate_mapping() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_predicate_mapping"]], "set_prefix_map() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_prefix_map"]], "set_prefix_map() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_prefix_map"]], "set_prefix_map() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_prefix_map"]], "set_prefix_map() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_prefix_map"]], "set_prefix_map() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_prefix_map"]], "set_prefix_map() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_prefix_map"]], "set_prefix_map() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_prefix_map"]], "set_prefix_map() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_prefix_map"]], "set_prefix_map() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_prefix_map"]], "set_prefix_map() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_prefix_map"]], "set_prefix_map() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_prefix_map"]], "set_provenance_map() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.set_provenance_map"]], "set_provenance_map() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_provenance_map"]], "set_provenance_map() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_provenance_map"]], "set_provenance_map() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.set_provenance_map"]], "set_provenance_map() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_provenance_map"]], "set_provenance_map() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.set_provenance_map"]], "set_provenance_map() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.set_provenance_map"]], "set_provenance_map() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.set_provenance_map"]], "set_provenance_map() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_provenance_map"]], "set_provenance_map() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_provenance_map"]], "set_provenance_map() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_provenance_map"]], "set_reverse_prefix_map() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.set_reverse_prefix_map"]], "set_reverse_prefix_map() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.set_reverse_prefix_map"]], "triple() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.triple"]], "triple() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.triple"]], "update_edge() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.update_edge"]], "update_edge() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.update_edge"]], "update_node() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.update_node"]], "update_node() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.update_node"]], "validate_edge() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.validate_edge"]], "validate_edge() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.validate_edge"]], "validate_edge() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.validate_edge"]], "validate_edge() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.validate_edge"]], "validate_edge() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.validate_edge"]], "validate_edge() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.validate_edge"]], "validate_edge() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.validate_edge"]], "validate_edge() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.validate_edge"]], "validate_edge() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.validate_edge"]], "validate_edge() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.validate_edge"]], "validate_edge() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.validate_edge"]], "validate_node() (kgx.source.graph_source.graphsource method)": [[27, "kgx.source.graph_source.GraphSource.validate_node"]], "validate_node() (kgx.source.json_source.jsonsource method)": [[27, "kgx.source.json_source.JsonSource.validate_node"]], "validate_node() (kgx.source.jsonl_source.jsonlsource method)": [[27, "kgx.source.jsonl_source.JsonlSource.validate_node"]], "validate_node() (kgx.source.neo_source.neosource method)": [[27, "kgx.source.neo_source.NeoSource.validate_node"]], "validate_node() (kgx.source.obograph_source.obographsource method)": [[27, "kgx.source.obograph_source.ObographSource.validate_node"]], "validate_node() (kgx.source.owl_source.owlsource method)": [[27, "kgx.source.owl_source.OwlSource.validate_node"]], "validate_node() (kgx.source.rdf_source.rdfsource method)": [[27, "kgx.source.rdf_source.RdfSource.validate_node"]], "validate_node() (kgx.source.source.source method)": [[27, "kgx.source.source.Source.validate_node"]], "validate_node() (kgx.source.sssom_source.sssomsource method)": [[27, "kgx.source.sssom_source.SssomSource.validate_node"]], "validate_node() (kgx.source.trapi_source.trapisource method)": [[27, "kgx.source.trapi_source.TrapiSource.validate_node"]], "validate_node() (kgx.source.tsv_source.tsvsource method)": [[27, "kgx.source.tsv_source.TsvSource.validate_node"]], "transformer (class in kgx.transformer)": [[28, "kgx.transformer.Transformer"]], "clear_errors() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.clear_errors"]], "get_errors() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.get_errors"]], "get_infores_catalog() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.get_infores_catalog"]], "get_sink() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.get_sink"]], "get_source() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.get_source"]], "kgx.transformer": [[28, "module-kgx.transformer"]], "log_error() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.log_error"]], "process() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.process"]], "save() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.save"]], "transform() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.transform"]], "write_report() (kgx.transformer.transformer method)": [[28, "kgx.transformer.Transformer.write_report"]], "curie_lookup() (in module kgx.utils.graph_utils)": [[31, "kgx.utils.graph_utils.curie_lookup"]], "get_ancestors() (in module kgx.utils.graph_utils)": [[31, "kgx.utils.graph_utils.get_ancestors"]], "get_category_via_superclass() (in module kgx.utils.graph_utils)": [[31, "kgx.utils.graph_utils.get_category_via_superclass"]], "get_parents() (in module kgx.utils.graph_utils)": [[31, "kgx.utils.graph_utils.get_parents"]], "kgx.utils.graph_utils": [[31, "module-kgx.utils.graph_utils"]], "graphentitytype (class in kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.GraphEntityType"]], "apply_edge_filters() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.apply_edge_filters"]], "apply_filters() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.apply_filters"]], "apply_graph_operations() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.apply_graph_operations"]], "apply_node_filters() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.apply_node_filters"]], "build_export_row() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.build_export_row"]], "camelcase_to_sentencecase() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.camelcase_to_sentencecase"]], "close_connection() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.close_connection"]], "contract() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.contract"]], "create_connection() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.create_connection"]], "current_time_in_millis() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.current_time_in_millis"]], "expand() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.expand"]], "format_biolink_category() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.format_biolink_category"]], "generate_edge_identifiers() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.generate_edge_identifiers"]], "generate_edge_key() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.generate_edge_key"]], "generate_uuid() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.generate_uuid"]], "get_biolink_ancestors() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_biolink_ancestors"]], "get_biolink_element() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_biolink_element"]], "get_biolink_property_types() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_biolink_property_types"]], "get_cache() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_cache"]], "get_curie_lookup_service() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_curie_lookup_service"]], "get_prefix_prioritization_map() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_prefix_prioritization_map"]], "get_toolkit() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_toolkit"]], "get_type_for_property() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.get_type_for_property"]], "is_null() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.is_null"]], "kgx.utils.kgx_utils": [[33, "module-kgx.utils.kgx_utils"]], "prepare_data_dict() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.prepare_data_dict"]], "remove_null() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.remove_null"]], "sanitize_import() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.sanitize_import"]], "sentencecase_to_camelcase() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.sentencecase_to_camelcase"]], "sentencecase_to_snakecase() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.sentencecase_to_snakecase"]], "snakecase_to_sentencecase() (in module kgx.utils.kgx_utils)": [[33, "kgx.utils.kgx_utils.snakecase_to_sentencecase"]], "get_biolink_element() (in module kgx.utils.rdf_utils)": [[34, "kgx.utils.rdf_utils.get_biolink_element"]], "infer_category() (in module kgx.utils.rdf_utils)": [[34, "kgx.utils.rdf_utils.infer_category"]], "kgx.utils.rdf_utils": [[34, "module-kgx.utils.rdf_utils"]], "process_predicate() (in module kgx.utils.rdf_utils)": [[34, "kgx.utils.rdf_utils.process_predicate"]]}})